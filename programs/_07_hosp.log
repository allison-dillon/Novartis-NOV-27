1                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M6 MBCS3170) 
      Licensed to NOVARTIS - SUPPL12, Site 70189709.
NOTE: This session is executing on the Linux 3.10.0-1160.11.1.el7.x86_64 (LIN X64) platform.



NOTE: Analytical products:
      
      SAS/STAT 15.1
      SAS/IML 15.1

NOTE: Additional host information:

 Linux LIN X64 3.10.0-1160.11.1.el7.x86_64 #1 SMP Mon Nov 30 13:05:31 EST 2020 x86_64 Red Hat Enterprise Linux Server release 7.9 
      (Maipo) 

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.02 seconds
      cpu time            0.02 seconds
      

NOTE: AUTOEXEC processing beginning; file is /mnt/share/home/dingyig/proj/NOV-27/programs/autoexec.sas.

NOTE: Libref ASSIGN was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /mnt/share/sas
ODBC: AUTOCOMMIT is YES for connection 0
NOTE: Libref HEOR was successfully assigned as follows: 
      Engine:        ODBC 
      Physical Name: rwe
NOTE: Libref DERIVED was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /home/dingyig/proj/NOV-27
ODBC: AUTOCOMMIT is YES for connection 1
NOTE: Libref SOURCE was successfully assigned as follows: 
      Engine:        ODBC 
      Physical Name: rwe

NOTE: AUTOEXEC processing completed.
2                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM


1          /*Hospitalization*/
2          * conf_id or los were used to check the database;
3          * All hospitalization in Confinement table and Medical table;
4          
5          %create(_07_hosp0)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_1: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp0 PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.092903
Total seconds used by the ODBC ACCESS engine were     0.094539
 
6          		select patid, conf_id, admit_date as fst_dt, disch_date as lst_dt, los, 'c' as tb
7          		from src_optum_claims_panther.dod_c
8          		where patid in (select distinct patid from dingyig._04_cohort_setup)
9          		union
10         		select a.patid, a.conf_id, a.fst_dt, a.lst_dt1 as lst_dt, datediff(a.lst_dt,a.fst_dt)+1 as los, 'm' as tb
11         		from (select *, case when lst_dt is null then fst_dt else lst_dt end as lst_dt1 from src_optum_claims_panther.dod_m) as
11       !  a
12         		where a.pos in (&inp_pos.) and a.patid in (select distinct patid from dingyig._04_cohort_setup)
13         %create(_07_hosp0);
 
ODBC_2: Executed: on connection 2
CREATE TABLE dingyig._07_hosp0 AS select patid, conf_id, admit_date as fst_dt, disch_date as lst_dt, los, 'c' as tb from 
src_optum_claims_panther.dod_c where patid in (select distinct patid from dingyig._04_cohort_setup) union select a.patid, 
a.conf_id, a.fst_dt, a.lst_dt1 as lst_dt, datediff(a.lst_dt,a.fst_dt)+1 as los, 'm' as tb from (select *, case when lst_dt is null 
then fst_dt else lst_dt end as lst_dt1 from src_optum_claims_panther.dod_m) as a where a.pos in ('21','34','51','55','56','61') and 
a.patid in (select distinct patid from dingyig._04_cohort_setup)
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   4.055408
Total seconds used by the ODBC ACCESS engine were     4.366363
 
 
ODBC_3: Prepared: on connection 2
SELECT 'dingyig._07_hosp0' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp0
 
 
ODBC_4: Executed: on connection 2
Prepared statement ODBC_3
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.005838
Total SQL execution seconds were:                   0.158992
Total SQL prepare seconds were:                     0.019982
Total SQL describe seconds were:                    0.000508
Total seconds used by the ODBC ACCESS engine were     0.242224
 
NOTE: The PROCEDURE SQL printed page 1.
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.12 seconds
      cpu time            0.14 seconds
3                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      

14         
15         
16         * Add ER visit: if ER date is one day prior to the inpatient visits, they are considered a continuous hospitalization;
17         * generate continuous ER visits;
18         %create(_07_er)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_5: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_er PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.075867
Total seconds used by the ODBC ACCESS engine were     0.077538
 
19         	SELECT DISTINCT starts.patid
20         	        , starts.fst_dt AS fst_dt
21         	        , ends.lst_dt AS lst_dt
22         		FROM (
23         				SELECT patid, fst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn
24         	 			FROM (
25         						SELECT patid, fst_dt, lst_dt,
26         			 				CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status,
27         			 				CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status
28         						FROM (
29         								SELECT a.patid, a.fst_dt, a.lst_dt,
30         								COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end,
31         								COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start
32         			 					FROM (select patid, fst_dt, case when lst_dt is null then fst_dt else lst_dt end as lst_dt, pos from
32       ! src_optum_claims_panther.dod_m) as a
33         			 					where a.pos in (&er_pos.) and a.patid in (select distinct patid from dingyig._04_cohort_setup)
34         			 					) AS t1
35         					) AS t2
36         		 		WHERE start_status= "new"
37         			) AS starts,
38         			(
39         				SELECT patid, lst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn
40         	 			FROM (
41         						SELECT patid, fst_dt, lst_dt,
42         				 			CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status,
43         				 			CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status
44         	 					FROM (
45         							SELECT a.patid, a.fst_dt, a.lst_dt,
46         							COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end,
47         							COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start
48         		 					FROM (select patid, fst_dt, case when lst_dt is null then fst_dt else lst_dt end as lst_dt, pos from
48       ! src_optum_claims_panther.dod_m) as a
49         		 					where a.pos in (&er_pos.) and a.patid in (select distinct patid from dingyig._04_cohort_setup)
50         	 					  ) AS t3
51         				) AS t4
52         				WHERE end_status= "new"
53         				) AS ends
54         				WHERE starts.rn = ends.rn
55         %create(_07_er);
 
ODBC_6: Executed: on connection 2
4                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

CREATE TABLE dingyig._07_er AS SELECT DISTINCT starts.patid , starts.fst_dt AS fst_dt , ends.lst_dt AS lst_dt FROM ( SELECT patid, 
fst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn FROM ( SELECT patid, fst_dt, lst_dt, CASE WHEN DATEDIFF(fst_dt, prev_end) 
<= (0+1) THEN "cont" ELSE "new" END AS start_status, CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS 
end_status FROM ( SELECT a.patid, a.fst_dt, a.lst_dt, COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY 
a.fst_dt,a.lst_dt), null) as prev_end, COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as 
next_start FROM (select patid, fst_dt, case when lst_dt is null then fst_dt else lst_dt end as lst_dt, pos from 
src_optum_claims_panther.dod_m) as a where a.pos in ('23') and a.patid in (select distinct patid from dingyig._04_cohort_setup) ) 
AS t1 ) AS t2 WHERE start_status= "new" ) AS starts, ( SELECT patid, lst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn FROM 
( SELECT patid, fst_dt, lst_dt, CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status, CASE WHEN 
DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status FROM ( SELECT a.patid, a.fst_dt, a.lst_dt, 
COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end, COALESCE(LEAD(a.fst_dt,1) OVER 
(PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start FROM (select patid, fst_dt, case when lst_dt is null then 
fst_dt else lst_dt end as lst_dt, pos from src_optum_claims_panther.dod_m) as a where a.pos in ('23') and a.patid in (select 
distinct patid from dingyig._04_cohort_setup) ) AS t3 ) AS t4 WHERE end_status= "new" ) AS ends WHERE starts.rn = ends.rn
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   3.418243
Total seconds used by the ODBC ACCESS engine were     3.640932
 
 
ODBC_7: Prepared: on connection 2
SELECT 'dingyig._07_er' As _table, COUNT(*) AS _rows FROM dingyig._07_er
 
 
ODBC_8: Executed: on connection 2
Prepared statement ODBC_7
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.003631
Total SQL execution seconds were:                   0.071309
Total SQL prepare seconds were:                     0.020634
Total SQL describe seconds were:                    0.000473
Total seconds used by the ODBC ACCESS engine were     0.106385
 
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           4.24 seconds
      cpu time            0.08 seconds
      

56         
57         * select ER one day prior to the hospitalization;
58         %create(_07_er2)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_9: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_er2 PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.089407
Total seconds used by the ODBC ACCESS engine were     0.091043
 
59         		select a.patid, a.fst_dt, b.lst_dt, datediff(b.lst_dt,a.fst_dt)+1 as los, 'er' as tb /*ER claims one day prior to the
59       ! hospitalization*/
60         					from dingyig._07_hosp0 as a inner join dingyig._07_er as b
5                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

61         					on a.patid=b.patid and datediff(a.fst_dt,b.lst_dt)=1 /*select one day prior to the admit date*/
62         %create(_07_er2);	
 
ODBC_10: Executed: on connection 2
CREATE TABLE dingyig._07_er2 AS select a.patid, a.fst_dt, b.lst_dt, datediff(b.lst_dt,a.fst_dt)+1 as los, 'er' as tb from 
dingyig._07_hosp0 as a inner join dingyig._07_er as b on a.patid=b.patid and datediff(a.fst_dt,b.lst_dt)=1
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   2.700434
Total seconds used by the ODBC ACCESS engine were     2.700825
 
 
ODBC_11: Prepared: on connection 2
SELECT 'dingyig._07_er2' As _table, COUNT(*) AS _rows FROM dingyig._07_er2
 
 
ODBC_12: Executed: on connection 2
Prepared statement ODBC_11
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.005637
Total SQL execution seconds were:                   0.050431
Total SQL prepare seconds were:                     0.021586
Total SQL describe seconds were:                    0.000514
Total seconds used by the ODBC ACCESS engine were     0.105896
 
NOTE: The PROCEDURE SQL printed page 3.
NOTE: PROCEDURE SQL used (Total process time):
      real time           3.32 seconds
      cpu time            0.04 seconds
      

63         
64         
65         * Combine Hospitalization and ER and make hospitalization with continuous visits;		
66         %create(_07_hosp_er_set)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_13: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_er_set PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.083541
Total seconds used by the ODBC ACCESS engine were     0.085055
 
67         	SELECT DISTINCT starts.patid
68         	        , starts.fst_dt AS fst_dt
69         	        , ends.lst_dt AS lst_dt
70         		FROM (
71         				SELECT patid, fst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn
72         	 			FROM (
73         						SELECT patid, fst_dt, lst_dt,
74         			 				CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status,
75         			 				CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status
76         						FROM (
6                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

77         								SELECT a.patid, a.fst_dt, a.lst_dt,
78         								COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end,
79         								COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start
80         			 					FROM (select patid, fst_dt, lst_dt from dingyig._07_hosp0 union select patid, fst_dt, lst_dt from
80       ! dingyig._07_er2) as a
81         			 					) AS t1
82         					) AS t2
83         		 		WHERE start_status= "new"
84         			) AS starts,
85         			(
86         				SELECT patid, lst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn
87         	 			FROM (
88         						SELECT patid, fst_dt, lst_dt,
89         				 			CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status,
90         				 			CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status
91         	 					FROM (
92         							SELECT a.patid, a.fst_dt, a.lst_dt,
93         							COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end,
94         							COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start
95         		 					FROM (select patid, fst_dt, lst_dt from dingyig._07_hosp0 union select patid, fst_dt, lst_dt from
95       ! dingyig._07_er2) as a
96         	 					  ) AS t3
97         				) AS t4
98         				WHERE end_status= "new"
99         				) AS ends
100        				WHERE starts.rn = ends.rn
101        %create(_07_hosp_er_set);
 
ODBC_14: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_er_set AS SELECT DISTINCT starts.patid , starts.fst_dt AS fst_dt , ends.lst_dt AS lst_dt FROM ( 
SELECT patid, fst_dt, ROW_NUMBER() OVER (ORDER BY patid, fst_dt) AS rn FROM ( SELECT patid, fst_dt, lst_dt, CASE WHEN 
DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE "new" END AS start_status, CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) 
THEN "cont" ELSE "new" END AS end_status FROM ( SELECT a.patid, a.fst_dt, a.lst_dt, COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY 
a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end, COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY 
a.fst_dt,a.lst_dt), null) as next_start FROM (select patid, fst_dt, lst_dt from dingyig._07_hosp0 union select patid, fst_dt, 
lst_dt from dingyig._07_er2) as a ) AS t1 ) AS t2 WHERE start_status= "new" ) AS starts, ( SELECT patid, lst_dt, ROW_NUMBER() OVER 
(ORDER BY patid, fst_dt) AS rn FROM ( SELECT patid, fst_dt, lst_dt, CASE WHEN DATEDIFF(fst_dt, prev_end) <= (0+1) THEN "cont" ELSE 
"new" END AS start_status, CASE WHEN DATEDIFF(next_start, lst_dt) <= (0+1) THEN "cont" ELSE "new" END AS end_status FROM ( SELECT 
a.patid, a.fst_dt, a.lst_dt, COALESCE(LAG(a.lst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as prev_end, 
COALESCE(LEAD(a.fst_dt,1) OVER (PARTITION BY a.patid ORDER BY a.fst_dt,a.lst_dt), null) as next_start FROM (select patid, fst_dt, 
lst_dt from dingyig._07_hosp0 union select patid, fst_dt, lst_dt from dingyig._07_er2) as a ) AS t3 ) AS t4 WHERE end_status= "new" 
) AS ends WHERE starts.rn = ends.rn
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.998571
Total seconds used by the ODBC ACCESS engine were     1.174222
 
 
ODBC_15: Prepared: on connection 2
SELECT 'dingyig._07_hosp_er_set' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_er_set
 
 
ODBC_16: Executed: on connection 2
Prepared statement ODBC_15
 
 
Summary Statistics for ODBC are:
7                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

Total row fetch seconds were:                       0.003172
Total SQL execution seconds were:                   0.050004
Total SQL prepare seconds were:                     0.021082
Total SQL describe seconds were:                    0.000479
Total seconds used by the ODBC ACCESS engine were     0.084057
 
NOTE: The PROCEDURE SQL printed page 4.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.76 seconds
      cpu time            0.07 seconds
      

102        
103        * Merge conf_id and diag: diag in Confinement table was preferred over diagnosis table;
104        %macro hosp_diag;
105        	%create(_07_hosp_er_diag)
106        			%do i=1 %to 5;
107        				select distinct a.*, b.conf_id, b.diag&i. as diag, case when b.patid is not null then "0&i." else '99' end as
107      ! diag_position /*checked all conf_id had diag*/
108        				from dingyig._07_hosp_er_set as a left join src_optum_claims_panther.dod_c as b /*use Confinement table*/
109        				on a.patid=b.patid and b.admit_date between a.fst_dt and a.lst_dt
110        				union
111        			%end;	
112        			/*Note: some multiple conf_id had continuous admit_date and disch_date, --> this is one hospitalizaiton*/
113        			select x.*, 'NA' as conf_id, y.diag, y.diag_position
114        			from dingyig._07_hosp_er_set as x
115        				left join (select a.patid, a.fst_dt, b.diag, case when b.diag_position is null then '99' else b.diag_position end as
115      ! diag_position
116        							from src_optum_claims_panther.dod_m as a
117        								inner join src_optum_claims_panther.dod_diag as b /*use Diagnosis table*/
118        							on a.pat_planid=b.pat_planid and a.clmid=b.clmid and a.loc_cd=b.loc_cd
119        							where a.pos in (&inp_pos.,&er_pos.) and a.patid in (select patid from dingyig._07_hosp_er_set)) as y
120        				on x.patid=y.patid and y.fst_dt between x.fst_dt and x.lst_dt	
121        		%create(_07_hosp_er_diag);
122        %mend hosp_diag;
123        %hosp_diag;
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_17: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_er_diag PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.078304
Total seconds used by the ODBC ACCESS engine were     0.079838
 
 
ODBC_18: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_er_diag AS select distinct a.*, b.conf_id, b.diag1 as diag, case when b.patid is not null then "01" 
else '99' end as diag_position from dingyig._07_hosp_er_set as a left join src_optum_claims_panther.dod_c as b on a.patid=b.patid 
and b.admit_date between a.fst_dt and a.lst_dt union select distinct a.*, b.conf_id, b.diag2 as diag, case when b.patid is not null 
then "02" else '99' end as diag_position from dingyig._07_hosp_er_set as a left join src_optum_claims_panther.dod_c as b on 
a.patid=b.patid and b.admit_date between a.fst_dt and a.lst_dt union select distinct a.*, b.conf_id, b.diag3 as diag, case when 
b.patid is not null then "03" else '99' end as diag_position from dingyig._07_hosp_er_set as a left join 
src_optum_claims_panther.dod_c as b on a.patid=b.patid and b.admit_date between a.fst_dt and a.lst_dt union select distinct a.*, 
b.conf_id, b.diag4 as diag, case when b.patid is not null then "04" else '99' end as diag_position from dingyig._07_hosp_er_set as 
a left join src_optum_claims_panther.dod_c as b on a.patid=b.patid and b.admit_date between a.fst_dt and a.lst_dt union select 
distinct a.*, b.conf_id, b.diag5 as diag, case when b.patid is not null then "05" else '99' end as diag_position from 
8                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

dingyig._07_hosp_er_set as a left join src_optum_claims_panther.dod_c as b on a.patid=b.patid and b.admit_date between a.fst_dt and 
a.lst_dt union select x.*, 'NA' as conf_id, y.diag, y.diag_position from dingyig._07_hosp_er_set as x left join (select a.patid, 
a.fst_dt, b.diag, case when b.diag_position is null then '99' else b.diag_position end as diag_position from 
src_optum_claims_panther.dod_m as a inner join src_optum_claims_panther.dod_diag as b on a.pat_planid=b.pat_planid and 
a.clmid=b.clmid and a.loc_cd=b.loc_cd where a.pos in ('21','34','51','55','56','61','23') and a.patid in (select patid from 
dingyig._07_hosp_er_set)) as y on x.patid=y.patid and y.fst_dt between x.fst_dt and x.lst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.454507
Total seconds used by the ODBC ACCESS engine were     0.454937
 
ERROR: CLI execute error: [Cloudera][ImpalaODBC] (110) Error while executing a query in Impala: [HY000] : Runtime Error: Query 
       1f4e43a6b93b0c16:084e3b2200000000: 0% Complete (1 out of 9496)

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
 
ODBC_19: Prepared: on connection 2
SELECT 'dingyig._07_hosp_er_diag' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_er_diag
 
 
Summary Statistics for ODBC are:
Total SQL prepare seconds were:                     3.316790
Total SQL describe seconds were:                    0.000501
Total seconds used by the ODBC ACCESS engine were     3.318439
 
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           4.27 seconds
      cpu time            0.08 seconds
      
124        
125        
126        * changed to any diagnosis;
127        %create(_07_hosp_er_diag_prim)


ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_20: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_er_diag_prim PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.079798
Total seconds used by the ODBC ACCESS engine were     0.081260
 
128        		select distinct z.*
129        		from (select a.*, rank() over (partition by a.patid, a.fst_dt order by a.patid, a.fst_dt, a.diag_position) as rn
129      ! /*choose DIAG1 in confinement and first diag_position in diagnosis table*/
130        			from dingyig._07_hosp_er_diag as a
131        			) as z
132        		where z.rn=1
133        %create(_07_hosp_er_diag_prim);
 
ODBC_21: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_er_diag_prim AS select distinct z.* from (select a.*, rank() over (partition by a.patid, a.fst_dt 
order by a.patid, a.fst_dt, a.diag_position) as rn from dingyig._07_hosp_er_diag as a ) as z where z.rn=1
9                                                          The SAS System                         Sunday, March 21, 2021 04:24:00 PM

 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.470631
Total seconds used by the ODBC ACCESS engine were     0.484062
 
 
ODBC_22: Prepared: on connection 2
SELECT 'dingyig._07_hosp_er_diag_prim' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_er_diag_prim
 
 
ODBC_23: Executed: on connection 2
Prepared statement ODBC_22
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.003336
Total SQL execution seconds were:                   0.038287
Total SQL prepare seconds were:                     0.018287
Total SQL describe seconds were:                    0.000523
Total seconds used by the ODBC ACCESS engine were     0.070128
 
NOTE: The PROCEDURE SQL printed page 5.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.04 seconds
      cpu time            0.06 seconds
      

134        
135        * ASCVD;
136        %macro hosp_ascvd;
137        	%create(_07_hosp_ascvd)
138        			select distinct patid, fst_dt, lst_dt
139        			%do i=1 %to 7;
140        				%let dx =%scan(mi*pad*stroke*tia*unsta_angina*sta_angina*other, &i., *); /*chd and cerebrovascular are optional*/
141        				, case when (substr(diag,1,3) in (&&&dx.)
142        						or substr(diag,1,4) in (&&&dx.)
143        						or substr(diag,1,5) in (&&&dx.)
144        						or substr(diag,1,6) in (&&&dx.))
145        					then 1 else 0
146        				end as &dx.
147        			%end;
148        			, 0 as revasc
149        			from dingyig._07_hosp_er_diag_prim
150        			union
151        			select distinct a.patid, a.fst_dt, a.lst_dt
152        				, 0 as mi, 0 as pad, 0 as stroke, 0 as tia, 0 as unsta_angina, 0 as sta_angina, 0 as other
153        					, case when b.patid is not null and b.grp = "revasc" then 1 else 0 end as revasc /*choose all procedure code because
153      !  cant identify primary procedure*/
154        				/*revascularization*/	
155        			from dingyig._07_hosp_er_diag_prim as a left join (select * from dingyig.optum2_01_proc where pos in
155      ! (&inp_pos.,&er_pos.) and grp in ('revasc')) as b
156        			on a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt
157        	%create(_07_hosp_ascvd);
158        %mend hosp_ascvd;
159        %hosp_ascvd;
ODBC: AUTOCOMMIT is YES for connection 2
 
10                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

ODBC_24: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_ascvd PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.077286
Total seconds used by the ODBC ACCESS engine were     0.078898
 
 
ODBC_25: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_ascvd AS select distinct patid, fst_dt, lst_dt , case when (substr(diag,1,3) in 
('410','4100','41000','41001','41002','4101','41010','41011','41012','4102','41020','41021','41022','4103','41030','41031','41032','
4104','41040', 
'41041','41042','4105','41050','41051','41052','4106','41060','41061','41062','4107','41070','41071','41072','4108','41080','41081',
'41082','4109','41090','41091', 
'41092','412','42979','I21','I210','I2101','I2102','I2109','I211','I2111','I2119','I212','I2121','I2129','I213','I214','I219','I21A'
,'I21A1','I21A9','I22','I220', 'I221','I222','I228','I229','I230','I231','I232','I233','I234','I235','I236','I237','I238','I252') 
or substr(diag,1,4) in 
('410','4100','41000','41001','41002','4101','41010','41011','41012','4102','41020','41021','41022','4103','41030','41031','41032','
4104','41040', 
'41041','41042','4105','41050','41051','41052','4106','41060','41061','41062','4107','41070','41071','41072','4108','41080','41081',
'41082','4109','41090','41091', 
'41092','412','42979','I21','I210','I2101','I2102','I2109','I211','I2111','I2119','I212','I2121','I2129','I213','I214','I219','I21A'
,'I21A1','I21A9','I22','I220', 'I221','I222','I228','I229','I230','I231','I232','I233','I234','I235','I236','I237','I238','I252') 
or substr(diag,1,5) in 
('410','4100','41000','41001','41002','4101','41010','41011','41012','4102','41020','41021','41022','4103','41030','41031','41032','
4104','41040', 
'41041','41042','4105','41050','41051','41052','4106','41060','41061','41062','4107','41070','41071','41072','4108','41080','41081',
'41082','4109','41090','41091', 
'41092','412','42979','I21','I210','I2101','I2102','I2109','I211','I2111','I2119','I212','I2121','I2129','I213','I214','I219','I21A'
,'I21A1','I21A9','I22','I220', 'I221','I222','I228','I229','I230','I231','I232','I233','I234','I235','I236','I237','I238','I252') 
or substr(diag,1,6) in 
('410','4100','41000','41001','41002','4101','41010','41011','41012','4102','41020','41021','41022','4103','41030','41031','41032','
4104','41040', 
'41041','41042','4105','41050','41051','41052','4106','41060','41061','41062','4107','41070','41071','41072','4108','41080','41081',
'41082','4109','41090','41091', 
'41092','412','42979','I21','I210','I2101','I2102','I2109','I211','I2111','I2119','I212','I2121','I2129','I213','I214','I219','I21A'
,'I21A1','I21A9','I22','I220', 'I221','I222','I228','I229','I230','I231','I232','I233','I234','I235','I236','I237','I238','I252')) 
then 1 else 0 end as mi , case when (substr(diag,1,3) in 
('440','4402','4402','44021','44022','44023','44024','44029','4403','4403','44031','44032','4404','4408','4409','445','I700','I701',
 
'I70201','I70202','I70203','I70208','I70209','I7021','I70211','I70212','I70213','I70218','I70219','I70221','I70222','I70223','I70228
','I70229','I70231','I70232','I70233','I70234','I70235','I70238','I70239','I70241','I70242','I70243','I70244','I70245','I70248','I70
249','I7025','I70261','I70262','I70263','I70268','I70269','I70291','I70292', 
'I70293','I70298','I70299','I70301','I70302','I70303','I70308','I70309','I7031','I70311','I70312','I70313','I70318','I70319','I70321
','I70322','I70323','I70328','I70329','I70331','I70332', 
'I70333','I70334','I70335','I70338','I70339','I70341','I70342','I70343','I70344','I70345','I70348','I70349','I7035','I70361','I70362
','I70363','I70368','I70369','I70391','I70392','I70393','I70398','I70399','I70401','I70402','I70403','I70408','I70409','I7041','I704
11','I70412','I70413','I70418','I70419','I70421','I70422','I70423','I70428','I70429','I70431','I70432','I70433','I70434', 
'I70435','I70438','I70439','I70441','I70442','I70443','I70444','I70445','I70448','I70449','I7045','I70461','I70462','I70463','I70468
','I70469','I70491','I70492','I70493','I70498','I70499','I70501','I70502','I70503','I70508','I70509','I7051	','I70511','I70512','I70
513','I70518','I70519','I70521','I70522','I70523','I70528','I70529','I70531','I70532','I70533','I70534','I70535','I70538', 
'I70539','I70541','I70542','I70543','I70544','I70545','I70548','I70549','I7055','I70561','I70562','I70563','I70568','I70569','I70591
','I70592','I70593','I70598','I70599','I70601','I70602','I70603','I70608','I70609','I7061','I70611','I70612','I70613','I70618','I706
19','I70621','I70622','I70623','I70628','I70629','I70631','I70632','I70633','I70634','I70635','I70638','I70639','I70641','I70642','I
70643','I70644','I70645','I70648','I70649','I7065','I70661','I70662','I70663','I70668','I70669','I70691','I70692','I70693','I70698',
'I70699','I70701','I70702','I70703','I70708','I70709','I7071','I70711','I70712','I70713','I70718','I70719','I70721','I70722','I70723
', 
11                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

'I70728','I70729','I70731','I70732','I70733','I70734','I70735','I70738','I70739','I70741','I70742','I70743','I70744','I70745','I7074
8','I70749','I7075','I70761', 
'I70762','I70763','I70768','I70769','I70791','I70792','I70793','I70798','I70799','I708','I7090','I7091','I7092') or 
substr(diag,1,4) in 
('440','4402','4402','44021','44022','44023','44024','44029','4403','4403','44031','44032','4404','4408','4409','445','I700','I701',
 
'I70201','I70202','I70203','I70208','I70209','I7021','I70211','I70212','I70213','I70218','I70219','I70221','I70222','I70223','I70228
','I70229','I70231','I70232','I70233','I70234','I70235','I70238','I70239','I70241','I70242','I70243','I70244','I70245','I70248','I70
249','I7025','I70261','I70262','I70263','I70268','I70269','I70291','I70292', 
'I70293','I70298','I70299','I70301','I70302','I70303','I70308','I70309','I7031','I70311','I70312','I70313','I70318','I70319','I70321
','I70322','I70323','I70328','I70329','I70331','I70332', 
'I70333','I70334','I70335','I70338','I70339','I70341','I70342','I70343','I70344','I70345','I70348','I70349','I7035','I70361','I70362
','I70363','I70368','I70369','I70391','I70392','I70393','I70398','I70399','I70401','I70402','I70403','I70408','I70409','I7041','I704
11','I70412','I70413','I70418','I70419','I70421','I70422','I70423','I70428','I70429','I70431','I70432','I70433','I70434', 
'I70435','I70438','I70439','I70441','I70442','I70443','I70444','I70445','I70448','I70449','I7045','I70461','I70462','I70463','I70468
','I70469','I70491','I70492','I70493','I70498','I70499','I70501','I70502','I70503','I70508','I70509','I7051	','I70511','I70512','I70
513','I70518','I70519','I70521','I70522','I70523','I70528','I70529','I70531','I70532','I70533','I70534','I70535','I70538', 
'I70539','I70541','I70542','I70543','I70544','I70545','I70548','I70549','I7055','I70561','I70562','I70563','I70568','I70569','I70591
','I70592','I70593','I70598','I70599','I70601','I70602','I70603','I70608','I70609','I7061','I70611','I70612','I70613','I70618','I706
19','I70621','I70622','I70623','I70628','I70629','I70631','I70632','I70633','I70634','I70635','I70638','I70639','I70641','I70642','I
70643','I70644','I70645','I70648','I70649','I7065','I70661','I70662','I70663','I70668','I70669','I70691','I70692','I70693','I70698',
'I70699','I70701','I70702','I70703','I70708','I70709','I7071','I70711','I70712','I70713','I70718','I70719','I70721','I70722','I70723
', 
'I70728','I70729','I70731','I70732','I70733','I70734','I70735','I70738','I70739','I70741','I70742','I70743','I70744','I70745','I7074
8','I70749','I7075','I70761', 
'I70762','I70763','I70768','I70769','I70791','I70792','I70793','I70798','I70799','I708','I7090','I7091','I7092') or 
substr(diag,1,5) in 
('440','4402','4402','44021','44022','44023','44024','44029','4403','4403','44031','44032','4404','4408','4409','445','I700','I701',
 
'I70201','I70202','I70203','I70208','I70209','I7021','I70211','I70212','I70213','I70218','I70219','I70221','I70222','I70223','I70228
','I70229','I70231','I70232','I70233','I70234','I70235','I70238','I70239','I70241','I70242','I70243','I70244','I70245','I70248','I70
249','I7025','I70261','I70262','I70263','I70268','I70269','I70291','I70292', 
'I70293','I70298','I70299','I70301','I70302','I70303','I70308','I70309','I7031','I70311','I70312','I70313','I70318','I70319','I70321
','I70322','I70323','I70328','I70329','I70331','I70332', 
'I70333','I70334','I70335','I70338','I70339','I70341','I70342','I70343','I70344','I70345','I70348','I70349','I7035','I70361','I70362
','I70363','I70368','I70369','I70391','I70392','I70393','I70398','I70399','I70401','I70402','I70403','I70408','I70409','I7041','I704
11','I70412','I70413','I70418','I70419','I70421','I70422','I70423','I70428','I70429','I70431','I70432','I70433','I70434', 
'I70435','I70438','I70439','I70441','I70442','I70443','I70444','I70445','I70448','I70449','I7045','I70461','I70462','I70463','I70468
','I70469','I70491','I70492','I70493','I70498','I70499','I70501','I70502','I70503','I70508','I70509','I7051	','I70511','I70512','I70
513','I70518','I70519','I70521','I70522','I70523','I70528','I70529','I70531','I70532','I70533','I70534','I70535','I70538', 
'I70539','I70541','I70542','I70543','I70544','I70545','I70548','I70549','I7055','I70561','I70562','I70563','I70568','I70569','I70591
','I70592','I70593','I70598','I70599','I70601','I70602','I70603','I70608','I70609','I7061','I70611','I70612','I70613','I70618','I706
19','I70621','I70622','I70623','I70628','I70629','I70631','I70632','I70633','I70634','I70635','I70638','I70639','I70641','I70642','I
70643','I70644','I70645','I70648','I70649','I7065','I70661','I70662','I70663','I70668','I70669','I70691','I70692','I70693','I70698',
'I70699','I70701','I70702','I70703','I70708','I70709','I7071','I70711','I70712','I70713','I70718','I70719','I70721','I70722','I70723
', 
'I70728','I70729','I70731','I70732','I70733','I70734','I70735','I70738','I70739','I70741','I70742','I70743','I70744','I70745','I7074
8','I70749','I7075','I70761', 
'I70762','I70763','I70768','I70769','I70791','I70792','I70793','I70798','I70799','I708','I7090','I7091','I7092') or 
substr(diag,1,6) in 
('440','4402','4402','44021','44022','44023','44024','44029','4403','4403','44031','44032','4404','4408','4409','445','I700','I701',
 
'I70201','I70202','I70203','I70208','I70209','I7021','I70211','I70212','I70213','I70218','I70219','I70221','I70222','I70223','I70228
','I70229','I70231','I70232','I70233','I70234','I70235','I70238','I70239','I70241','I70242','I70243','I70244','I70245','I70248','I70
249','I7025','I70261','I70262','I70263','I70268','I70269','I70291','I70292', 
'I70293','I70298','I70299','I70301','I70302','I70303','I70308','I70309','I7031','I70311','I70312','I70313','I70318','I70319','I70321
','I70322','I70323','I70328','I70329','I70331','I70332', 
'I70333','I70334','I70335','I70338','I70339','I70341','I70342','I70343','I70344','I70345','I70348','I70349','I7035','I70361','I70362
12                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

','I70363','I70368','I70369','I70391','I70392','I70393','I70398','I70399','I70401','I70402','I70403','I70408','I70409','I7041','I704
11','I70412','I70413','I70418','I70419','I70421','I70422','I70423','I70428','I70429','I70431','I70432','I70433','I70434', 
'I70435','I70438','I70439','I70441','I70442','I70443','I70444','I70445','I70448','I70449','I7045','I70461','I70462','I70463','I70468
','I70469','I70491','I70492','I70493','I70498','I70499','I70501','I70502','I70503','I70508','I70509','I7051	','I70511','I70512','I70
513','I70518','I70519','I70521','I70522','I70523','I70528','I70529','I70531','I70532','I70533','I70534','I70535','I70538', 
'I70539','I70541','I70542','I70543','I70544','I70545','I70548','I70549','I7055','I70561','I70562','I70563','I70568','I70569','I70591
','I70592','I70593','I70598','I70599','I70601','I70602','I70603','I70608','I70609','I7061','I70611','I70612','I70613','I70618','I706
19','I70621','I70622','I70623','I70628','I70629','I70631','I70632','I70633','I70634','I70635','I70638','I70639','I70641','I70642','I
70643','I70644','I70645','I70648','I70649','I7065','I70661','I70662','I70663','I70668','I70669','I70691','I70692','I70693','I70698',
'I70699','I70701','I70702','I70703','I70708','I70709','I7071','I70711','I70712','I70713','I70718','I70719','I70721','I70722','I70723
', 
'I70728','I70729','I70731','I70732','I70733','I70734','I70735','I70738','I70739','I70741','I70742','I70743','I70744','I70745','I7074
8','I70749','I7075','I70761', 
'I70762','I70763','I70768','I70769','I70791','I70792','I70793','I70798','I70799','I708','I7090','I7091','I7092')) then 1 else 0 end 
as pad , case when (substr(diag,1,3) in 
('43301','43311','43321','43331','43381','43391','43401','43411','43491','I63','I630','I6300','I6301','I63011','I63012','I63013','I6
3019','I6302','I6303','I63031','I63032','I63033','I63039','I6309','I631','I6310','I6311','I63111','I63112','I63113','I63119','I6312'
,'I6313','I63131','I63132','I63133','I63139','I6319','I632','I6320','I6321', 
'I63211','I63212','I63213','I63219','I6322','I6323','I63231','I63232','I63233','I63239','I6329','I633','I6330','I6331','I63311','I63
312','I63313','I63319','I6332','I63321','I63322','I63323','I63329','I6333','I63331','I63332','I63333','I63339','I6334','I63341','I63
342','I63343','I63349','I6339','I634','I6340','I6341','I63411','I63412','I63413', 
'I63419','I6342','I63421','I63422','I63423','I63429','I6343','I63431','I63432','I63433','I63439','I6344','I63441','I63442','I63443',
'I63449','I6349','I635','I6350','I6351','I63511','I63512','I63513','I63519','I6352','I63521','I63522','I63523','I63529','I6353','I63
531','I63532','I63533','I63539','I6354','I63541','I63542','I63543','I63549','I6359', 'I636','I638','I6381','I6389','I639') or 
substr(diag,1,4) in 
('43301','43311','43321','43331','43381','43391','43401','43411','43491','I63','I630','I6300','I6301','I63011','I63012','I63013','I6
3019','I6302','I6303','I63031','I63032','I63033','I63039','I6309','I631','I6310','I6311','I63111','I63112','I63113','I63119','I6312'
,'I6313','I63131','I63132','I63133','I63139','I6319','I632','I6320','I6321', 
'I63211','I63212','I63213','I63219','I6322','I6323','I63231','I63232','I63233','I63239','I6329','I633','I6330','I6331','I63311','I63
312','I63313','I63319','I6332','I63321','I63322','I63323','I63329','I6333','I63331','I63332','I63333','I63339','I6334','I63341','I63
342','I63343','I63349','I6339','I634','I6340','I6341','I63411','I63412','I63413', 
'I63419','I6342','I63421','I63422','I63423','I63429','I6343','I63431','I63432','I63433','I63439','I6344','I63441','I63442','I63443',
'I63449','I6349','I635','I6350','I6351','I63511','I63512','I63513','I63519','I6352','I63521','I63522','I63523','I63529','I6353','I63
531','I63532','I63533','I63539','I6354','I63541','I63542','I63543','I63549','I6359', 'I636','I638','I6381','I6389','I639') or 
substr(diag,1,5) in 
('43301','43311','43321','43331','43381','43391','43401','43411','43491','I63','I630','I6300','I6301','I63011','I63012','I63013','I6
3019','I6302','I6303','I63031','I63032','I63033','I63039','I6309','I631','I6310','I6311','I63111','I63112','I63113','I63119','I6312'
,'I6313','I63131','I63132','I63133','I63139','I6319','I632','I6320','I6321', 
'I63211','I63212','I63213','I63219','I6322','I6323','I63231','I63232','I63233','I63239','I6329','I633','I6330','I6331','I63311','I63
312','I63313','I63319','I6332','I63321','I63322','I63323','I63329','I6333','I63331','I63332','I63333','I63339','I6334','I63341','I63
342','I63343','I63349','I6339','I634','I6340','I6341','I63411','I63412','I63413', 
'I63419','I6342','I63421','I63422','I63423','I63429','I6343','I63431','I63432','I63433','I63439','I6344','I63441','I63442','I63443',
'I63449','I6349','I635','I6350','I6351','I63511','I63512','I63513','I63519','I6352','I63521','I63522','I63523','I63529','I6353','I63
531','I63532','I63533','I63539','I6354','I63541','I63542','I63543','I63549','I6359', 'I636','I638','I6381','I6389','I639') or 
substr(diag,1,6) in 
('43301','43311','43321','43331','43381','43391','43401','43411','43491','I63','I630','I6300','I6301','I63011','I63012','I63013','I6
3019','I6302','I6303','I63031','I63032','I63033','I63039','I6309','I631','I6310','I6311','I63111','I63112','I63113','I63119','I6312'
,'I6313','I63131','I63132','I63133','I63139','I6319','I632','I6320','I6321', 
'I63211','I63212','I63213','I63219','I6322','I6323','I63231','I63232','I63233','I63239','I6329','I633','I6330','I6331','I63311','I63
312','I63313','I63319','I6332','I63321','I63322','I63323','I63329','I6333','I63331','I63332','I63333','I63339','I6334','I63341','I63
342','I63343','I63349','I6339','I634','I6340','I6341','I63411','I63412','I63413', 
'I63419','I6342','I63421','I63422','I63423','I63429','I6343','I63431','I63432','I63433','I63439','I6344','I63441','I63442','I63443',
'I63449','I6349','I635','I6350','I6351','I63511','I63512','I63513','I63519','I6352','I63521','I63522','I63523','I63529','I6353','I63
531','I63532','I63533','I63539','I6354','I63541','I63542','I63543','I63549','I6359', 'I636','I638','I6381','I6389','I639')) then 1 
else 0 end as stroke , case when (substr(diag,1,3) in 
('435','4350','4351','4352','4353','4358','4359','G450','G451','G452','G453','G458','G459','G460','G461','G462','I67848') or 
substr(diag,1,4) in 
('435','4350','4351','4352','4353','4358','4359','G450','G451','G452','G453','G458','G459','G460','G461','G462','I67848') or 
13                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

substr(diag,1,5) in 
('435','4350','4351','4352','4353','4358','4359','G450','G451','G452','G453','G458','G459','G460','G461','G462','I67848') or 
substr(diag,1,6) in 
('435','4350','4351','4352','4353','4358','4359','G450','G451','G452','G453','G458','G459','G460','G461','G462','I67848')) then 1 
else 0 end as tia , case when (substr(diag,1,3) in 
('4111','I200','I25110','I25700','I25710','I25720','I25730','I25750','I25760','I25790') or substr(diag,1,4) in 
('4111','I200','I25110','I25700','I25710','I25720','I25730','I25750','I25760','I25790') or substr(diag,1,5) in 
('4111','I200','I25110','I25700','I25710','I25720','I25730','I25750','I25760','I25790') or substr(diag,1,6) in 
('4111','I200','I25110','I25700','I25710','I25720','I25730','I25750','I25760','I25790')) then 1 else 0 end as unsta_angina , case 
when (substr(diag,1,3) in 
('413','4130','4139','I20','I208','I209','I2511','I25111','I25118','I25119','I257','I2570','I25701','I25708' 
,'I25709','I2571','I25711','I25718','I25719','I2572','I25721','I25728','I25729','I2573','I25731', 
'I25738','I25739','I2575','I25751','I25758','I25759','I2576','I25761','I25768','I25769','I2579','I25791','I25798','I25799') or 
substr(diag,1,4) in ('413','4130','4139','I20','I208','I209','I2511','I25111','I25118','I25119','I257','I2570','I25701','I25708' 
,'I25709','I2571','I25711','I25718','I25719','I2572','I25721','I25728','I25729','I2573','I25731', 
'I25738','I25739','I2575','I25751','I25758','I25759','I2576','I25761','I25768','I25769','I2579','I25791','I25798','I25799') or 
substr(diag,1,5) in ('413','4130','4139','I20','I208','I209','I2511','I25111','I25118','I25119','I257','I2570','I25701','I25708' 
,'I25709','I2571','I25711','I25718','I25719','I2572','I25721','I25728','I25729','I2573','I25731', 
'I25738','I25739','I2575','I25751','I25758','I25759','I2576','I25761','I25768','I25769','I2579','I25791','I25798','I25799') or 
substr(diag,1,6) in ('413','4130','4139','I20','I208','I209','I2511','I25111','I25118','I25119','I257','I2570','I25701','I25708' 
,'I25709','I2571','I25711','I25718','I25719','I2572','I25721','I25728','I25729','I2573','I25731', 
'I25738','I25739','I2575','I25751','I25758','I25759','I2576','I25761','I25768','I25769','I2579','I25791','I25798','I25799')) then 1 
else 0 end as sta_angina , case when (substr(diag,1,3) in 
('414','41401','41402','41403','41404','41405','41406','41407','4142','4143','4144','4148','I2510','I25810','I25811','I25812','I2582
', 
'I2583','I2584','43300','43310','43320','43330','43380','43390','I65','I650','I6501','I6502','I6503','I6509','I651','I652','I6521','
I6522','I6523','I6529', 
'I658','I659','I66','I660','I6601','I6602','I6603','I6609','I661','I6611','I6612','I6613','I6619','I662','I6621','I6622','I6623','I6
629','I663','I668','I669','I672') or substr(diag,1,4) in 
('414','41401','41402','41403','41404','41405','41406','41407','4142','4143','4144','4148','I2510','I25810','I25811','I25812','I2582
', 
'I2583','I2584','43300','43310','43320','43330','43380','43390','I65','I650','I6501','I6502','I6503','I6509','I651','I652','I6521','
I6522','I6523','I6529', 
'I658','I659','I66','I660','I6601','I6602','I6603','I6609','I661','I6611','I6612','I6613','I6619','I662','I6621','I6622','I6623','I6
629','I663','I668','I669','I672') or substr(diag,1,5) in 
('414','41401','41402','41403','41404','41405','41406','41407','4142','4143','4144','4148','I2510','I25810','I25811','I25812','I2582
', 
'I2583','I2584','43300','43310','43320','43330','43380','43390','I65','I650','I6501','I6502','I6503','I6509','I651','I652','I6521','
I6522','I6523','I6529', 
'I658','I659','I66','I660','I6601','I6602','I6603','I6609','I661','I6611','I6612','I6613','I6619','I662','I6621','I6622','I6623','I6
629','I663','I668','I669','I672') or substr(diag,1,6) in 
('414','41401','41402','41403','41404','41405','41406','41407','4142','4143','4144','4148','I2510','I25810','I25811','I25812','I2582
', 
'I2583','I2584','43300','43310','43320','43330','43380','43390','I65','I650','I6501','I6502','I6503','I6509','I651','I652','I6521','
I6522','I6523','I6529', 
'I658','I659','I66','I660','I6601','I6602','I6603','I6609','I661','I6611','I6612','I6613','I6619','I662','I6621','I6622','I6623','I6
629','I663','I668','I669','I672')) then 1 else 0 end as other , 0 as revasc from dingyig._07_hosp_er_diag_prim union select 
distinct a.patid, a.fst_dt, a.lst_dt , 0 as mi, 0 as pad, 0 as stroke, 0 as tia, 0 as unsta_angina, 0 as sta_angina, 0 as other , 
case when b.patid is not null and b.grp = "revasc" then 1 else 0 end as revasc from dingyig._07_hosp_er_diag_prim as a left join 
(select * from dingyig.optum2_01_proc where pos in ('21','34','51','55','56','61','23') and grp in ('revasc')) as b on 
a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   1.326978
Total seconds used by the ODBC ACCESS engine were     1.327888
 
ERROR: CLI execute error: [Cloudera][ImpalaODBC] (110) Error while executing a query in Impala: [HY000] : Runtime Error: Query 
14                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

       634d2ca61d3bfd2e:f05898c200000000: 26% Complete (21 out of 79)

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
 
ODBC_26: Prepared: on connection 2
SELECT 'dingyig._07_hosp_ascvd' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_ascvd
 
 
Summary Statistics for ODBC are:
Total SQL prepare seconds were:                     3.729385
Total SQL describe seconds were:                    0.000559
Total seconds used by the ODBC ACCESS engine were     3.731164
 
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.56 seconds
      cpu time            0.10 seconds
      
160        
161        /*Lpa measurements for hospitalizations*/
162        	%create(_07_hosp_lpa)


ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_27: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_lpa PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.091303
Total seconds used by the ODBC ACCESS engine were     0.092938
 
163        		select distinct a.patid, a.fst_dt, a.lst_dt
164        		, case when b.grp='lpa_mg' and rslt_NBR <  30 then 1 else 0 end as mg30
165        		, case when b.grp='lpa_mg' and RSLT_NBR <  50 then 1 else 0 end as mg50
166        		, case when b.grp='lpa_mg' and 30 <=  RSLT_NBR and RSLT_NBR <  50 then 1 else 0 end as mg30_50
167        		, case when b.grp='lpa_mg' and 50 <=  RSLT_NBR and RSLT_NBR <  70 then 1 else 0 end as mg50_70
168        		, case when b.grp='lpa_mg' and 70 <=  RSLT_NBR and RSLT_NBR <  90 then 1 else 0 end as mg70_90
169        		, case when b.grp='lpa_mg' and 90 <=  RSLT_NBR and RSLT_NBR <  120 then 1 else 0 end as mg90_120
170        		, case when b.grp='lpa_mg' and 70 <=  RSLT_NBR then 1 else 0 end as mg70
171        		, case when b.grp='lpa_mg' and 90 <=  RSLT_NBR then 1 else 0 end as mg90
172        		, case when b.grp='lpa_mg' and 120 <=  RSLT_NBR then 1 else 0 end as mg120
173        		, case when b.grp='lpa_mg' and 150 <=  RSLT_NBR then 1 else 0 end as mg150
174        	, case when b.grp='lpa_mol' and rslt_NBR <  65 then 1 else 0 end as mol65
175        		, case when b.grp='lpa_mol' and  RSLT_NBR <  105 then 1 else 0 end as mol105
176        		, case when b.grp='lpa_mol' and  65 <=  RSLT_NBR and RSLT_NBR <  105 then 1 else 0 end as mol65_105
177        		 ,case when b.grp='lpa_mol' and  105 <=  RSLT_NBR and RSLT_NBR <  150 then 1 else 0 end as mol105_150
178        		 ,case 	when b.grp='lpa_mol' and  150 <=  RSLT_NBR and RSLT_NBR <  190 then 1 else 0 end as mol150_190
179        		 ,case 	when b.grp='lpa_mol' and  190 <=  RSLT_NBR and RSLT_NBR <  255 then 1 else 0 end as mol190_255
180        		, case when b.grp='lpa_mol' and  150 <=  RSLT_NBR then 1 else 0 end as mol150
181        		, case when b.grp='lpa_mol' and  190 <=  RSLT_NBR then 1 else 0 end as mol190
182        		, case when b.grp='lpa_mol' and  255 <=  RSLT_NBR then 1 else 0 end as mol255
183        		, case when b.grp='lpa_mol' and  320 <=  RSLT_NBR then 1 else 0 end as mol320
184         		from dingyig._07_hosp_er_diag_prim as a left join dingyig.ldlc_04_lab2 b
185         			on a.patid=b.patid and b.grp in ('lpa_mg','lpa_mol') and b.fst_dt between a.fst_dt and a.lst_dt
186        	%create(_07_hosp_lpa);
 
15                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

ODBC_28: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_lpa AS select distinct a.patid, a.fst_dt, a.lst_dt , case when b.grp='lpa_mg' and rslt_NBR < 30 then 
1 else 0 end as mg30 , case when b.grp='lpa_mg' and RSLT_NBR < 50 then 1 else 0 end as mg50 , case when b.grp='lpa_mg' and 30 <= 
RSLT_NBR and RSLT_NBR < 50 then 1 else 0 end as mg30_50 , case when b.grp='lpa_mg' and 50 <= RSLT_NBR and RSLT_NBR < 70 then 1 else 
0 end as mg50_70 , case when b.grp='lpa_mg' and 70 <= RSLT_NBR and RSLT_NBR < 90 then 1 else 0 end as mg70_90 , case when 
b.grp='lpa_mg' and 90 <= RSLT_NBR and RSLT_NBR < 120 then 1 else 0 end as mg90_120 , case when b.grp='lpa_mg' and 70 <= RSLT_NBR 
then 1 else 0 end as mg70 , case when b.grp='lpa_mg' and 90 <= RSLT_NBR then 1 else 0 end as mg90 , case when b.grp='lpa_mg' and 
120 <= RSLT_NBR then 1 else 0 end as mg120 , case when b.grp='lpa_mg' and 150 <= RSLT_NBR then 1 else 0 end as mg150 , case when 
b.grp='lpa_mol' and rslt_NBR < 65 then 1 else 0 end as mol65 , case when b.grp='lpa_mol' and RSLT_NBR < 105 then 1 else 0 end as 
mol105 , case when b.grp='lpa_mol' and 65 <= RSLT_NBR and RSLT_NBR < 105 then 1 else 0 end as mol65_105 ,case when b.grp='lpa_mol' 
and 105 <= RSLT_NBR and RSLT_NBR < 150 then 1 else 0 end as mol105_150 ,case when b.grp='lpa_mol' and 150 <= RSLT_NBR and RSLT_NBR 
< 190 then 1 else 0 end as mol150_190 ,case when b.grp='lpa_mol' and 190 <= RSLT_NBR and RSLT_NBR < 255 then 1 else 0 end as 
mol190_255 , case when b.grp='lpa_mol' and 150 <= RSLT_NBR then 1 else 0 end as mol150 , case when b.grp='lpa_mol' and 190 <= 
RSLT_NBR then 1 else 0 end as mol190 , case when b.grp='lpa_mol' and 255 <= RSLT_NBR then 1 else 0 end as mol255 , case when 
b.grp='lpa_mol' and 320 <= RSLT_NBR then 1 else 0 end as mol320 from dingyig._07_hosp_er_diag_prim as a left join 
dingyig.ldlc_04_lab2 b on a.patid=b.patid and b.grp in ('lpa_mg','lpa_mol') and b.fst_dt between a.fst_dt and a.lst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   1.182467
Total seconds used by the ODBC ACCESS engine were     1.215612
 
 
ODBC_29: Prepared: on connection 2
SELECT 'dingyig._07_hosp_lpa' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_lpa
 
 
ODBC_30: Executed: on connection 2
Prepared statement ODBC_29
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.003003
Total SQL execution seconds were:                   0.040052
Total SQL prepare seconds were:                     0.021931
Total SQL describe seconds were:                    0.000532
Total seconds used by the ODBC ACCESS engine were     0.074637
 
NOTE: The PROCEDURE SQL printed page 6.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.45 seconds
      cpu time            0.09 seconds
      

187        	
188        
189        /*ICU */
190        %let icu = %str('0206','0233');
191        %create(_07_icu0)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_31: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_icu0 PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.086241
Total seconds used by the ODBC ACCESS engine were     0.087897
16                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

 
192        			select distinct patid, fst_dt as dt
193        			from src_optum_claims_panther.dod_m
194        			where rvnu_cd in (&icu.) and pos in (&inp_pos.,&er_pos.) /*Revenue code in Medical table*/
195        			union
196        			select distinct a.patid, a.fst_dt as dt
197        			from src_optum_claims_panther.dod_m as a
198        				inner join (select distinct * from src_optum_claims_panther.dod_fd where rvnu_cd in (&icu.)) as b /*Revenue code in
198      ! Facility table*/			
199        			on a.pat_planid=b.pat_planid and a.clmid=b.clmid and a.clmseq=b.clmseq and a.fst_dt=b.fst_dt
200        			where a.pos in (&inp_pos.,&er_pos.)
201        /* 			union */
202        /* 			select distinct a.patid, a.admit_date as dt */
203        /* 			from src_optum_claims_panther.dod_c as a */
204        /* 			where a.icu_ind='Y' */ /*icu_ind is not validated*/
205        %create(_07_icu0);
 
ODBC_32: Executed: on connection 2
CREATE TABLE dingyig._07_icu0 AS select distinct patid, fst_dt as dt from src_optum_claims_panther.dod_m where rvnu_cd in 
('0206','0233') and pos in ('21','34','51','55','56','61','23') union select distinct a.patid, a.fst_dt as dt from 
src_optum_claims_panther.dod_m as a inner join (select distinct * from src_optum_claims_panther.dod_fd where rvnu_cd in 
('0206','0233')) as b on a.pat_planid=b.pat_planid and a.clmid=b.clmid and a.clmseq=b.clmseq and a.fst_dt=b.fst_dt where a.pos in 
('21','34','51','55','56','61','23')
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   9.585525
Total seconds used by the ODBC ACCESS engine were     9.797326
 
 
ODBC_33: Prepared: on connection 2
SELECT 'dingyig._07_icu0' As _table, COUNT(*) AS _rows FROM dingyig._07_icu0
 
 
ODBC_34: Executed: on connection 2
Prepared statement ODBC_33
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.005587
Total SQL execution seconds were:                   0.102833
Total SQL prepare seconds were:                     0.020039
Total SQL describe seconds were:                    0.000495
Total seconds used by the ODBC ACCESS engine were     0.156992
 
NOTE: The PROCEDURE SQL printed page 7.
NOTE: PROCEDURE SQL used (Total process time):
      real time           10.45 seconds
      cpu time            0.15 seconds
      

206        
207        %create(_07_icu)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_35: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_icu PURGE
 
17                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.560549
Total seconds used by the ODBC ACCESS engine were     0.562101
 
208        			select a.patid, a.fst_dt, count(distinct b.dt) as icu_los /*max: 7 days*/
209        			from dingyig._07_hosp_ascvd as a inner join dingyig._07_icu0 as b
210        			on a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt
211        			group by a.patid, a.fst_dt
212        %create(_07_icu);
 
ODBC_36: Executed: on connection 2
CREATE TABLE dingyig._07_icu AS select a.patid, a.fst_dt, count(distinct b.dt) as icu_los from dingyig._07_hosp_ascvd as a inner 
join dingyig._07_icu0 as b on a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt group by a.patid, a.fst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   4.568543
Total seconds used by the ODBC ACCESS engine were     4.569005
 
 
ODBC_37: Prepared: on connection 2
SELECT 'dingyig._07_icu' As _table, COUNT(*) AS _rows FROM dingyig._07_icu
 
 
ODBC_38: Executed: on connection 2
Prepared statement ODBC_37
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.003238
Total SQL execution seconds were:                   0.039083
Total SQL prepare seconds were:                     0.019949
Total SQL describe seconds were:                    0.000518
Total seconds used by the ODBC ACCESS engine were     0.072953
 
NOTE: The PROCEDURE SQL printed page 8.
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.62 seconds
      cpu time            0.05 seconds
      

213        
214        
215        /*Rehabilitation*/
216        %let rehab_drg = %str('462','945','946');
217        %let rehab_pos = %str('31','61','62');
218        %let rehab_rvnu =
218      ! %str('0024','0118','0128','0138','0148','0158','0911','0931','0932','0943','0022','0550','0551','0552','0559');
219        %let rehab_tos = %str('FAC_IP.REHSNF','FAC_IP.SNF','PROF.PHYMED');
220        %let rehab_provcat =
220      ! %str('0067','0068','0069','0772','0773','0774','0775','0776','0777','0778','0779','0780','0781','0782','0783','0784'
221        					,'0785','0786','0787','0788','0789','0790','0791','0792','0793','0794','1034','1035','1114','1120','1153','1180','11
221      ! 84'
222        					,'1189','1335','1368','1370','1372','1374','1376','1378','1379','1380','1382','1384','1388','1390','1392','1394','13
222      ! 96'
223        					,'1398','1400','1402','1404','1406','1408','1410','1412','1414','1416','1418','1420','1422','1424','1426','1428','14
223      ! 30'
18                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

224        					,'1432','1434','1465','1509','1560','1562','1591','1683','1834','1878','1879','1890','1893','1951','1971','1978','19
224      ! 82'
225        					,'2012','2116','2184','2186','2212','2235','2261','2271','2296','2327','2349','2455','2461','2550','2633','2662','26
225      ! 67'
226        					,'2687','2705','2775','2820','2875','2893','2900','2943','2960','2963','2964','2967','2993','3036','3072','3164','31
226      ! 73'
227        					,'3181','3182','3190','3223','3260','3269','3281','3309','3347','3362','3383','3398','3434','3472','3505','3571','35
227      ! 84'
228        					,'3592','3679','3700','3729','3759','3821','3863','3895','3906','3965','3977','3999','4086','4146','4156','4215','42
228      ! 75'
229        					,'4340','4635','5607','5772','5779','5782','5856','5863','5884','5887','5910','6696','6711','6789','6842','6977','70
229      ! 48'
230        					,'7053','7066','7076','7083','7119','7209','7263');
231        %let rehab_proc = %str('4510F','93668','93797','93798','G0422','G0423','G8699','G8700','S9472');
232        
233        %create(_07_reh0)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_39: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_reh0 PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.105016
Total seconds used by the ODBC ACCESS engine were     0.106628
 
234        		select distinct patid, fst_dt as dt
235        		/*Medical table*/
236        		from src_optum_claims_panther.dod_m
237        		where pos in (&inp_pos.,&er_pos.)
238        			and (drg in (&rehab_drg.) or pos in (&rehab_pos.) or rvnu_cd in (&rehab_rvnu.) or provcat in (&rehab_provcat.) or
238      ! proc_cd in (&rehab_proc.) or tos_cd in (&rehab_tos.))
239        			and patid in (select distinct patid from dingyig._04_cohort_setup)
240        		union
241        		/*Facility Detail file*/
242        		select distinct a.patid, a.fst_dt as dt
243        		from (select distinct * from src_optum_claims_panther.dod_m where pos in (&inp_pos.,&er_pos.)) as a
244        			inner join (select distinct * from src_optum_claims_panther.dod_fd where rvnu_cd in (&rehab_rvnu.) or proc_cd in
244      ! (&rehab_proc.)) as b
245        			on a.pat_planid=b.pat_planid and a.clmid=b.clmid and a.clmseq=b.clmseq and a.fst_dt=b.fst_dt
246        		where a.patid in (select distinct patid from dingyig._04_cohort_setup)
247        		union
248        		/*Confinement table*/
249        		select distinct patid, admit_date as dt
250        		from src_optum_claims_panther.dod_c
251        		where (drg in (&rehab_drg.) or pos in (&rehab_pos.) or tos_cd in (&rehab_tos.))
252        			and patid in (select distinct patid from dingyig._04_cohort_setup)
253        %create(_07_reh0);	
 
ODBC_40: Executed: on connection 2
CREATE TABLE dingyig._07_reh0 AS select distinct patid, fst_dt as dt from src_optum_claims_panther.dod_m where pos in 
('21','34','51','55','56','61','23') and (drg in ('462','945','946') or pos in ('31','61','62') or rvnu_cd in 
('0024','0118','0128','0138','0148','0158','0911','0931','0932','0943','0022','0550','0551','0552','0559') or provcat in 
('0067','0068','0069','0772','0773','0774','0775','0776','0777','0778','0779','0780','0781','0782','0783','0784' 
,'0785','0786','0787','0788','0789','0790','0791','0792','0793','0794','1034','1035','1114','1120','1153','1180','1184' 
,'1189','1335','1368','1370','1372','1374','1376','1378','1379','1380','1382','1384','1388','1390','1392','1394','1396' 
,'1398','1400','1402','1404','1406','1408','1410','1412','1414','1416','1418','1420','1422','1424','1426','1428','1430' 
,'1432','1434','1465','1509','1560','1562','1591','1683','1834','1878','1879','1890','1893','1951','1971','1978','1982' 
19                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

,'2012','2116','2184','2186','2212','2235','2261','2271','2296','2327','2349','2455','2461','2550','2633','2662','2667' 
,'2687','2705','2775','2820','2875','2893','2900','2943','2960','2963','2964','2967','2993','3036','3072','3164','3173' 
,'3181','3182','3190','3223','3260','3269','3281','3309','3347','3362','3383','3398','3434','3472','3505','3571','3584' 
,'3592','3679','3700','3729','3759','3821','3863','3895','3906','3965','3977','3999','4086','4146','4156','4215','4275' 
,'4340','4635','5607','5772','5779','5782','5856','5863','5884','5887','5910','6696','6711','6789','6842','6977','7048' 
,'7053','7066','7076','7083','7119','7209','7263') or proc_cd in 
('4510F','93668','93797','93798','G0422','G0423','G8699','G8700','S9472') or tos_cd in 
('FAC_IP.REHSNF','FAC_IP.SNF','PROF.PHYMED')) and patid in (select distinct patid from dingyig._04_cohort_setup) union select 
distinct a.patid, a.fst_dt as dt from (select distinct * from src_optum_claims_panther.dod_m where pos in 
('21','34','51','55','56','61','23')) as a inner join (select distinct * from src_optum_claims_panther.dod_fd where rvnu_cd in 
('0024','0118','0128','0138','0148','0158','0911','0931','0932','0943','0022','0550','0551','0552','0559') or proc_cd in 
('4510F','93668','93797','93798','G0422','G0423','G8699','G8700','S9472')) as b on a.pat_planid=b.pat_planid and a.clmid=b.clmid 
and a.clmseq=b.clmseq and a.fst_dt=b.fst_dt where a.patid in (select distinct patid from dingyig._04_cohort_setup) union select 
distinct patid, admit_date as dt from src_optum_claims_panther.dod_c where (drg in ('462','945','946') or pos in ('31','61','62') 
or tos_cd in ('FAC_IP.REHSNF','FAC_IP.SNF','PROF.PHYMED')) and patid in (select distinct patid from dingyig._04_cohort_setup)
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                  19.569040
Total seconds used by the ODBC ACCESS engine were    20.057770
 
 
ODBC_41: Prepared: on connection 2
SELECT 'dingyig._07_reh0' As _table, COUNT(*) AS _rows FROM dingyig._07_reh0
 
 
ODBC_42: Executed: on connection 2
Prepared statement ODBC_41
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.005551
Total SQL execution seconds were:                   0.096581
Total SQL prepare seconds were:                     0.020713
Total SQL describe seconds were:                    0.000530
Total seconds used by the ODBC ACCESS engine were     0.150985
 
NOTE: The PROCEDURE SQL printed page 9.
NOTE: PROCEDURE SQL used (Total process time):
      real time           20.75 seconds
      cpu time            0.25 seconds
      

254        		
255        %create(_07_reh)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_43: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_reh PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.177759
Total seconds used by the ODBC ACCESS engine were     0.179391
 
256        			select a.patid, a.fst_dt, count(distinct b.dt) as reh_los
257        			from dingyig._07_hosp_ascvd as a inner join dingyig._07_reh0 as b
258        			on a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt
20                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

259        			group by a.patid, a.fst_dt
260        %create(_07_reh);
 
ODBC_44: Executed: on connection 2
CREATE TABLE dingyig._07_reh AS select a.patid, a.fst_dt, count(distinct b.dt) as reh_los from dingyig._07_hosp_ascvd as a inner 
join dingyig._07_reh0 as b on a.patid=b.patid and b.dt between a.fst_dt and a.lst_dt group by a.patid, a.fst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   4.457609
Total seconds used by the ODBC ACCESS engine were     4.457974
 
 
ODBC_45: Prepared: on connection 2
SELECT 'dingyig._07_reh' As _table, COUNT(*) AS _rows FROM dingyig._07_reh
 
 
ODBC_46: Executed: on connection 2
Prepared statement ODBC_45
 
 
Summary Statistics for ODBC are:
Total row fetch seconds were:                       0.003611
Total SQL execution seconds were:                   0.039213
Total SQL prepare seconds were:                     0.021315
Total SQL describe seconds were:                    0.000545
Total seconds used by the ODBC ACCESS engine were     0.074730
 
NOTE: The PROCEDURE SQL printed page 10.
NOTE: PROCEDURE SQL used (Total process time):
      real time           5.13 seconds
      cpu time            0.04 seconds
      

261        		
262        * merge ICU, Rehabilitation and Lpa Measurements;
263        %create(_07_hosp_final)
ODBC: AUTOCOMMIT is YES for connection 2
 
ODBC_47: Executed: on connection 2
DROP TABLE IF EXISTS dingyig._07_hosp_final PURGE
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.461176
Total seconds used by the ODBC ACCESS engine were     0.462836
 
264        			select distinct a.*, b.icu_los, c.reh_los
265        			,d.mg30,d.mg50,d.mg30_50,d.mg50_70,d.mg70_90,d.mg90_120,d.mg70,d.mg90,d.mg120,d.mg150,d.mol65,d.mol105,d.mol65_105,d.m
265      ! ol105_150,d.mol150_190,d.mol190_255,d.mol150,d.mol190,d.mol255,d.mol320
266        			from dingyig._07_hosp_ascvd as a
267        				left join dingyig._07_icu as b on a.patid=b.patid and a.fst_dt=b.fst_dt
268        				left join dingyig._07_reh as c on a.patid=c.patid and a.fst_dt=c.fst_dt
269        				left join dingyig._07_hosp_lpa d on a.patid=d.patid and a.fst_dt=d.fst_dt
270        %create(_07_hosp_final);
 
ODBC_48: Executed: on connection 2
CREATE TABLE dingyig._07_hosp_final AS select distinct a.*, b.icu_los, c.reh_los 
21                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

,d.mg30,d.mg50,d.mg30_50,d.mg50_70,d.mg70_90,d.mg90_120,d.mg70,d.mg90,d.mg120,d.mg150,d.mol65,d.mol105,d.mol65_105,d.mol105_150,d.mo
l150_190,d.mol190_255,d.mol150,d.mol190,d.mol255,d.mol320 from dingyig._07_hosp_ascvd as a left join dingyig._07_icu as b on 
a.patid=b.patid and a.fst_dt=b.fst_dt left join dingyig._07_reh as c on a.patid=c.patid and a.fst_dt=c.fst_dt left join 
dingyig._07_hosp_lpa d on a.patid=d.patid and a.fst_dt=d.fst_dt
 
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.178634
Total seconds used by the ODBC ACCESS engine were     0.179024
 
ERROR: CLI execute error: [Cloudera][ImpalaODBC] (370) Query analysis error occurred during query execution: [HY000] : 
       AnalysisException: Could not resolve table reference: 'dingyig._07_reh'

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
 
ODBC_49: Prepared: on connection 2
SELECT 'dingyig._07_hosp_final' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_final
 
 
Summary Statistics for ODBC are:
Total SQL prepare seconds were:                     0.087495
Total seconds used by the ODBC ACCESS engine were     0.088221
 
ERROR: CLI prepare error: [Cloudera][ImpalaODBC] (370) Query analysis error occurred during query execution: [HY000] : 
       AnalysisException: Could not resolve table reference: 'dingyig._07_hosp_final'

SQL statement: SELECT 'dingyig._07_hosp_final' As _table, COUNT(*) AS _rows FROM dingyig._07_hosp_final.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.14 seconds
      cpu time            0.22 seconds
      
271        
272        
273        /*save to SAS*/


 
ODBC_50: Prepared: on connection 0
SELECT * FROM dingyig._07_hosp_final
 
274        data _07_hosp;
275        	set heor._07_hosp_final;
276        run;

 
ODBC_51: Executed: on connection 0
Prepared statement ODBC_50
 
ERROR: CLI open cursor error: [Cloudera][ImpalaODBC] (110) Error while executing a query in Impala: [HY000] : Runtime Error: Query 
       064d3e6096ae4f7d:7ac1ea3000000000: 34% Complete (9 out of 26)

NOTE: The DATA step has been abnormally terminated.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: Due to ERROR(s) above, SAS set option OBS=0, enabling syntax check mode. 
      This prevents execution of subsequent data modification statements.
 
Summary Statistics for ODBC are:
Total SQL execution seconds were:                   0.417499
Total SQL prepare seconds were:                     0.021634
Total SQL describe seconds were:                    0.007557
22                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

Total seconds used by the ODBC ACCESS engine were     0.454152
 
WARNING: The data set WORK._07_HOSP may be incomplete.  When this step was stopped there were 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.45 seconds
      cpu time            0.03 seconds
      

277        
278        
279        /*patients enrolled continuously for time period*/
280        %macro enroll;
281        	%do z=1 %to 2;
282        	%let groups=overall*mi*pad*stroke*unsta_angina*sta_angina*tia*other*revasc*cvd*anginatia*noncvd;
283        		%do zz=1 %to 12;
284        		
285        		%let ad = %scan(&groups., &zz., *);
286        	/*change variables for cohort2*/
287        	data  _07_primary_&z.&ad. ;
288        	set derived._02_primary_&z.;
289        		%do t=1 %to 14;
290        			%let dt =
290      ! %scan(lpa_date*eligend*eligeff*index_date_overall*index_date_mi*index_date_stroke*index_date_pad*index_date_unsta_angina*
290      ! index_date_sta_angina*index_date_tia*index_date_other*index_date_revasc*index_date_cvd*index_date_anginatia, &t., *);
291        			format &dt.2 date9.;
292        			&dt.2=datepart(&dt.);
293        			drop &dt.;
294        			rename &dt.2=&dt.;
295        		%end;
296        		
297        		run;
298        		
299        	proc sql;
300        		create table derived._07_primary_&z.&ad. as
301        		select a.*
302        		,case when eligend>=index_date_&ad. +365.25 then 1 end as one_year
303        		,case when eligend>=index_date_&ad. +(365.25*2) then 1 end as two_years
304        		from _07_primary_&z.&ad.  a;
305        	quit;	
306        		
307        	%end;
308        	%end;
309        %mend;
310        %enroll;

NOTE: The data set WORK._07_PRIMARY_1OVERALL has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
23                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM




NOTE: The data set WORK._07_PRIMARY_1MI has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1PAD has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1STROKE has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1UNSTA_ANGINA has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
24                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1STA_ANGINA has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1TIA has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1OTHER has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1REVASC has 0 observations and 33 variables.
25                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1CVD has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1ANGINATIA has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_1NONCVD has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
26                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2OVERALL has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2MI has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      



NOTE: The data set WORK._07_PRIMARY_2PAD has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2STROKE has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
27                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM


NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2UNSTA_ANGINA has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2STA_ANGINA has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2TIA has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


28                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM


NOTE: The data set WORK._07_PRIMARY_2OTHER has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2REVASC has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2CVD has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2ANGINATIA has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
29                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      



NOTE: The data set WORK._07_PRIMARY_2NONCVD has 0 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
NOTE: Statement not executed due to NOEXEC option.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
311        
312        
313        
314        %macro char_correct;
315        	data _07_hosp_pre;
316        		set _07_hosp;
317        		%do t=1 %to 2;
318        			%let dt = %scan(fst_dt*lst_dt, &t., *);
319        			format &dt.2 date9.;
320        			&dt.2=datepart(&dt.);
321        			drop &dt.;
322        			rename &dt.2=&dt.;
323        		%end;
324        	run;
325        	
326        %mend char_correct;
327        %char_correct;



NOTE: The data set WORK._07_HOSP_PRE has 0 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

328        
329        
330        /*hospitalizations need all,  1 and 2 years*/
331        options mprint;	
332        %macro hosp(time, num, year);
333        /*cohort 1*/
334        %do z=1 %to 2;
335        %let groups=overall*mi*pad*stroke*unsta_angina*sta_angina*tia*other*revasc*cvd*anginatia*noncvd;
336        		%do zz=1 %to 12;
337        		
338        		%let ad = %scan(&groups., &zz., *);
339        	proc sql;
30                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

340        		create table _07_hosp_&ad.&z. as
341        		select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_&ad.
342        		from derived._07_primary_&z.&ad.  as a
343        			inner join (select distinct patid, fst_dt, lst_dt
344        						%do i=1 %to 30;
345        							%let grp =%scan(mi*pad*stroke*tia*unsta_angina*sta_angina*other*revasc
346        											*icu_los*reh_los*mg30*mg50*mg30_50*mg50_70*mg70_90*mg90_120*mg70*mg90*mg120*mg150*mol65*mol105*mol65_105*mol10
346      ! 5_150
347        											*mol150_190*mol190_255*mol150*mol190*mol255*mol320, &i., *);
348        							, max(&grp.) as &grp.
349        						%end;
350        						from _07_hosp_pre
351        						group by patid, fst_dt
352        						) as b
353        		on a.patid=b.patid
354        			and a.index_date_&ad. lt b.fst_dt le (&time.)
355        			and a.eligeff le b.fst_dt le a.eligend;	
356        	quit;
357        	
358        
359        
360        data _07_hosp2_&ad.&z.;
361        	set _07_hosp_&ad.&z.;
362        	
363        	* length of stay;
364        	los=lst_dt-fst_dt+1;
365        	
366        	* diagnosis;
367        	if mi=1 then hosp_mi=1;
368        	if stroke=1 then hosp_stroke=1;
369        	if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
370        	if unsta_angina=1 then hosp_angina=1;
371        	if revasc=1 then hosp_revasc=1;
372        	if sta_angina=1 or tia=1 then hosp_other=1;
373        	
374        	* ICU and rehabilitation;
375        	if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
376        	if icu_los ge 1 then icu=1;
377        	
378        	if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
379        	/*rates for MI, PAD or REVASC*/
380        	if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
381        run;
382        
383        	proc sql;
384        		create table _07_hosp3&ad.&z. as
385        		select distinct patid
386        				, index_date_&ad., eligeff, eligend, max(lst_dt) as lst_dt format date9.
387        				, count(distinct fst_dt) as n_hosp
388        			/* number of hospitalizations */
389        			%do r=1 %to 37;
390        				%let cat =%scan(mi*unsta_angina*sta_angina*stroke*tia*pad
391        								*hosp_ascvd*hosp_mi*hosp_stroke*hosp_pad*hosp_angina*hosp_revasc*hosp_other*reh_cvd*icu
392        								*los*hosp_mi_is_re*mg30*mg50*mg30_50*mg50_70*mg70_90*mg90_120*mg70*mg90*mg120*mg150*mol65*mol105*mol65_105*mol105
392      ! _150
393        											*mol150_190*mol190_255*mol150*mol190*mol255*mol320, &r., *);
394        				, sum(case when &cat. > 0 then &cat. else 0 end) as &cat.
395        			%end;
31                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

396        			/* length of stay */
397        			%do j=1 %to 36;
398        				%let sub = %scan(mi*unsta_angina*sta_angina*stroke*tia*pad
399        								*hosp_ascvd*hosp_mi*hosp_stroke*hosp_pad*hosp_angina*hosp_revasc*hosp_other*reh_cvd*icu*hosp_mi_is_re
400        								*mg30*mg50*mg30_50*mg50_70*mg70_90*mg90_120*mg70*mg90*mg120*mg150*mol65*mol105*mol65_105*mol105_150
401        											*mol150_190*mol190_255*mol150*mol190*mol255*mol320, &j., *);
402        				, sum(case when &sub. > 0 then los else 0 end) as &sub._los
403        			%end;
404        			, sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los /*only number of days with ICU*/
405        			, sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los /*only number of days with rehabilitation*/
406        		from _07_hosp2_&ad.&z.
407        		group by patid;
408        	quit;
409        	
410        	
411        	
412        data derived._07_hosp&ad.&z.&year;
413        	set _07_hosp3&ad.&z.;
414        	* person-year;
415        	py=max((eligend-index_date_&ad.+1),(lst_dt-index_date_&ad.+1)) / 365.25;
416        	if py ge &num. then py=&num.;
417        	ln_py=log(py);
418        	
419        run;
420        
421        		%end;
422        	%end;
423        %mend ;
424        %hosp(a.index_date_&ad.+365.25, 1, one_year);
WARNING: Apparent symbolic reference AD not resolved.
MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_1overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.index_date_overall+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall1;
MPRINT(HOSP):   set _07_hosp_overall1;
ERROR: File WORK._07_HOSP_OVERALL1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
32                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall1 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
33                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall1one_year;
MPRINT(HOSP):   set _07_hosp3overall1;
ERROR: File WORK._07_HOSP3OVERALL1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPOVERALL1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_1mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.index_date_mi+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi1;
MPRINT(HOSP):   set _07_hosp_mi1;
ERROR: File WORK._07_HOSP_MI1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
34                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi1 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
35                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospmi1one_year;
MPRINT(HOSP):   set _07_hosp3mi1;
ERROR: File WORK._07_HOSP3MI1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_1pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.index_date_pad+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad1;
MPRINT(HOSP):   set _07_hosp_pad1;
ERROR: File WORK._07_HOSP_PAD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
36                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad1 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
37                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosppad1one_year;
MPRINT(HOSP):   set _07_hosp3pad1;
ERROR: File WORK._07_HOSP3PAD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_1stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.index_date_stroke+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke1;
MPRINT(HOSP):   set _07_hosp_stroke1;
ERROR: File WORK._07_HOSP_STROKE1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
38                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke1 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
39                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospstroke1one_year;
MPRINT(HOSP):   set _07_hosp3stroke1;
ERROR: File WORK._07_HOSP3STROKE1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPSTROKE1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_1unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.index_date_unsta_angina+365.25) and a.eligeff le 
b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_unsta_angina1;
MPRINT(HOSP):   set _07_hosp_unsta_angina1;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
40                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina1 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
41                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospunsta_angina1one_year;
MPRINT(HOSP):   set _07_hosp3unsta_angina1;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA1ONE_YEAR may be incomplete.  When this step was stopped there were 0 
         observations and 5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_1sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.index_date_sta_angina+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_sta_angina1;
MPRINT(HOSP):   set _07_hosp_sta_angina1;
ERROR: File WORK._07_HOSP_STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
42                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina1 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
43                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina1one_year;
MPRINT(HOSP):   set _07_hosp3sta_angina1;
ERROR: File WORK._07_HOSP3STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
derived._07_primary_1tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.index_date_tia+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia1;
MPRINT(HOSP):   set _07_hosp_tia1;
ERROR: File WORK._07_HOSP_TIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
44                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia1 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
45                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosptia1one_year;
MPRINT(HOSP):   set _07_hosp3tia1;
ERROR: File WORK._07_HOSP3TIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
derived._07_primary_1other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.index_date_other+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_other1;
MPRINT(HOSP):   set _07_hosp_other1;
ERROR: File WORK._07_HOSP_OTHER1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
46                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other1 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
47                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospother1one_year;
MPRINT(HOSP):   set _07_hosp3other1;
ERROR: File WORK._07_HOSP3OTHER1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOTHER1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_revasc1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_1revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.index_date_revasc+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc1;
MPRINT(HOSP):   set _07_hosp_revasc1;
ERROR: File WORK._07_HOSP_REVASC1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
48                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc1 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
49                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc1one_year;
MPRINT(HOSP):   set _07_hosp3revasc1;
ERROR: File WORK._07_HOSP3REVASC1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPREVASC1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_1cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.index_date_cvd+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd1;
MPRINT(HOSP):   set _07_hosp_cvd1;
ERROR: File WORK._07_HOSP_CVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
50                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd1 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
51                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd1one_year;
MPRINT(HOSP):   set _07_hosp3cvd1;
ERROR: File WORK._07_HOSP3CVD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_1anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.index_date_anginatia+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia1;
MPRINT(HOSP):   set _07_hosp_anginatia1;
ERROR: File WORK._07_HOSP_ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
52                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia1 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
53                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia1one_year;
MPRINT(HOSP):   set _07_hosp3anginatia1;
ERROR: File WORK._07_HOSP3ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_1noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.index_date_noncvd+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd1;
MPRINT(HOSP):   set _07_hosp_noncvd1;
ERROR: File WORK._07_HOSP_NONCVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
54                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd1 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
55                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd1one_year;
MPRINT(HOSP):   set _07_hosp3noncvd1;
ERROR: File WORK._07_HOSP3NONCVD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD1ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPNONCVD1ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_2overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.index_date_overall+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall2;
MPRINT(HOSP):   set _07_hosp_overall2;
ERROR: File WORK._07_HOSP_OVERALL2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
56                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall2 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
57                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall2one_year;
MPRINT(HOSP):   set _07_hosp3overall2;
ERROR: File WORK._07_HOSP3OVERALL2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPOVERALL2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_2mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.index_date_mi+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi2;
MPRINT(HOSP):   set _07_hosp_mi2;
ERROR: File WORK._07_HOSP_MI2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
58                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi2 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
59                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospmi2one_year;
MPRINT(HOSP):   set _07_hosp3mi2;
ERROR: File WORK._07_HOSP3MI2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_2pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.index_date_pad+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad2;
MPRINT(HOSP):   set _07_hosp_pad2;
ERROR: File WORK._07_HOSP_PAD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
60                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad2 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
61                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosppad2one_year;
MPRINT(HOSP):   set _07_hosp3pad2;
ERROR: File WORK._07_HOSP3PAD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_2stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.index_date_stroke+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke2;
MPRINT(HOSP):   set _07_hosp_stroke2;
ERROR: File WORK._07_HOSP_STROKE2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
62                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke2 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
63                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospstroke2one_year;
MPRINT(HOSP):   set _07_hosp3stroke2;
ERROR: File WORK._07_HOSP3STROKE2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPSTROKE2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_2unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.index_date_unsta_angina+365.25) and a.eligeff le 
b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_unsta_angina2;
MPRINT(HOSP):   set _07_hosp_unsta_angina2;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
64                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina2 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
65                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospunsta_angina2one_year;
MPRINT(HOSP):   set _07_hosp3unsta_angina2;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA2ONE_YEAR may be incomplete.  When this step was stopped there were 0 
         observations and 5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_2sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.index_date_sta_angina+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_sta_angina2;
MPRINT(HOSP):   set _07_hosp_sta_angina2;
ERROR: File WORK._07_HOSP_STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
66                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina2 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
67                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina2one_year;
MPRINT(HOSP):   set _07_hosp3sta_angina2;
ERROR: File WORK._07_HOSP3STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
derived._07_primary_2tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.index_date_tia+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia2;
MPRINT(HOSP):   set _07_hosp_tia2;
ERROR: File WORK._07_HOSP_TIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
68                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia2 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
69                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosptia2one_year;
MPRINT(HOSP):   set _07_hosp3tia2;
ERROR: File WORK._07_HOSP3TIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
derived._07_primary_2other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.index_date_other+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_other2;
MPRINT(HOSP):   set _07_hosp_other2;
ERROR: File WORK._07_HOSP_OTHER2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
70                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other2 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
71                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospother2one_year;
MPRINT(HOSP):   set _07_hosp3other2;
ERROR: File WORK._07_HOSP3OTHER2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOTHER2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_revasc2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_2revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.index_date_revasc+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc2;
MPRINT(HOSP):   set _07_hosp_revasc2;
ERROR: File WORK._07_HOSP_REVASC2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
72                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc2 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
73                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc2one_year;
MPRINT(HOSP):   set _07_hosp3revasc2;
ERROR: File WORK._07_HOSP3REVASC2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPREVASC2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_2cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.index_date_cvd+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd2;
MPRINT(HOSP):   set _07_hosp_cvd2;
ERROR: File WORK._07_HOSP_CVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
74                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd2 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
75                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd2one_year;
MPRINT(HOSP):   set _07_hosp3cvd2;
ERROR: File WORK._07_HOSP3CVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_2anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.index_date_anginatia+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia2;
MPRINT(HOSP):   set _07_hosp_anginatia2;
ERROR: File WORK._07_HOSP_ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
76                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia2 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
77                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia2one_year;
MPRINT(HOSP):   set _07_hosp3anginatia2;
ERROR: File WORK._07_HOSP3ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_2noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.index_date_noncvd+365.25) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd2;
MPRINT(HOSP):   set _07_hosp_noncvd2;
ERROR: File WORK._07_HOSP_NONCVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
78                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd2 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
79                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd2one_year;
MPRINT(HOSP):   set _07_hosp3noncvd2;
ERROR: File WORK._07_HOSP3NONCVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 1 then py=1;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD2ONE_YEAR may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPNONCVD2ONE_YEAR was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

WARNING: Apparent symbolic reference AD not resolved.
425        %hosp(a.index_date_&ad.+(365.25*2), 2, two_years);	
MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_1overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.index_date_overall+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall1;
MPRINT(HOSP):   set _07_hosp_overall1;
ERROR: File WORK._07_HOSP_OVERALL1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
80                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OVERALL1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall1 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
81                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall1two_years;
MPRINT(HOSP):   set _07_hosp3overall1;
ERROR: File WORK._07_HOSP3OVERALL1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPOVERALL1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_1mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.index_date_mi+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi1;
MPRINT(HOSP):   set _07_hosp_mi1;
82                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

ERROR: File WORK._07_HOSP_MI1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_MI1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi1 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
83                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospmi1two_years;
MPRINT(HOSP):   set _07_hosp3mi1;
ERROR: File WORK._07_HOSP3MI1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_1pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.index_date_pad+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad1;
MPRINT(HOSP):   set _07_hosp_pad1;
84                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

ERROR: File WORK._07_HOSP_PAD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_PAD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad1 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
85                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosppad1two_years;
MPRINT(HOSP):   set _07_hosp3pad1;
ERROR: File WORK._07_HOSP3PAD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_1stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.index_date_stroke+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke1;
MPRINT(HOSP):   set _07_hosp_stroke1;
86                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

ERROR: File WORK._07_HOSP_STROKE1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STROKE1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke1 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
87                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospstroke1two_years;
MPRINT(HOSP):   set _07_hosp3stroke1;
ERROR: File WORK._07_HOSP3STROKE1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPSTROKE1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_1unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.index_date_unsta_angina+(365.25*2)) and a.eligeff 
le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


88                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   data _07_hosp2_unsta_angina1;
MPRINT(HOSP):   set _07_hosp_unsta_angina1;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_UNSTA_ANGINA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina1 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
89                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospunsta_angina1two_years;
MPRINT(HOSP):   set _07_hosp3unsta_angina1;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA1TWO_YEARS may be incomplete.  When this step was stopped there were 0 
         observations and 5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_1sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.index_date_sta_angina+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
90                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM



MPRINT(HOSP):   data _07_hosp2_sta_angina1;
MPRINT(HOSP):   set _07_hosp_sta_angina1;
ERROR: File WORK._07_HOSP_STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STA_ANGINA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina1 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
91                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina1two_years;
MPRINT(HOSP):   set _07_hosp3sta_angina1;
ERROR: File WORK._07_HOSP3STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
derived._07_primary_1tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.index_date_tia+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
92                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia1;
MPRINT(HOSP):   set _07_hosp_tia1;
ERROR: File WORK._07_HOSP_TIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_TIA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia1 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
93                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosptia1two_years;
MPRINT(HOSP):   set _07_hosp3tia1;
ERROR: File WORK._07_HOSP3TIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
derived._07_primary_1other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.index_date_other+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
94                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_other1;
MPRINT(HOSP):   set _07_hosp_other1;
ERROR: File WORK._07_HOSP_OTHER1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OTHER1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other1 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
95                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospother1two_years;
MPRINT(HOSP):   set _07_hosp3other1;
ERROR: File WORK._07_HOSP3OTHER1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPOTHER1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_revasc1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_1revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.index_date_revasc+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
96                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc1;
MPRINT(HOSP):   set _07_hosp_revasc1;
ERROR: File WORK._07_HOSP_REVASC1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_REVASC1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc1 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
97                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc1two_years;
MPRINT(HOSP):   set _07_hosp3revasc1;
ERROR: File WORK._07_HOSP3REVASC1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPREVASC1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_1cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.index_date_cvd+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
98                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd1;
MPRINT(HOSP):   set _07_hosp_cvd1;
ERROR: File WORK._07_HOSP_CVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_CVD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd1 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
99                                                         The SAS System                         Sunday, March 21, 2021 04:24:00 PM

as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd1two_years;
MPRINT(HOSP):   set _07_hosp3cvd1;
ERROR: File WORK._07_HOSP3CVD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_1anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.index_date_anginatia+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
100                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia1;
MPRINT(HOSP):   set _07_hosp_anginatia1;
ERROR: File WORK._07_HOSP_ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_ANGINATIA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia1 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
101                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia1two_years;
MPRINT(HOSP):   set _07_hosp3anginatia1;
ERROR: File WORK._07_HOSP3ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_1noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.index_date_noncvd+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
102                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd1;
MPRINT(HOSP):   set _07_hosp_noncvd1;
ERROR: File WORK._07_HOSP_NONCVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_NONCVD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd1 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
103                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd1two_years;
MPRINT(HOSP):   set _07_hosp3noncvd1;
ERROR: File WORK._07_HOSP3NONCVD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD1TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPNONCVD1TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_2overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.index_date_overall+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
104                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall2;
MPRINT(HOSP):   set _07_hosp_overall2;
ERROR: File WORK._07_HOSP_OVERALL2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OVERALL2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall2 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
105                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall2two_years;
MPRINT(HOSP):   set _07_hosp3overall2;
ERROR: File WORK._07_HOSP3OVERALL2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPOVERALL2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_2mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
106                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.index_date_mi+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi2;
MPRINT(HOSP):   set _07_hosp_mi2;
ERROR: File WORK._07_HOSP_MI2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_MI2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi2 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
107                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospmi2two_years;
MPRINT(HOSP):   set _07_hosp3mi2;
ERROR: File WORK._07_HOSP3MI2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_2pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
108                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.index_date_pad+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad2;
MPRINT(HOSP):   set _07_hosp_pad2;
ERROR: File WORK._07_HOSP_PAD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_PAD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad2 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
109                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosppad2two_years;
MPRINT(HOSP):   set _07_hosp3pad2;
ERROR: File WORK._07_HOSP3PAD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_2stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
110                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.index_date_stroke+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke2;
MPRINT(HOSP):   set _07_hosp_stroke2;
ERROR: File WORK._07_HOSP_STROKE2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STROKE2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke2 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
111                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospstroke2two_years;
MPRINT(HOSP):   set _07_hosp3stroke2;
ERROR: File WORK._07_HOSP3STROKE2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPSTROKE2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_2unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
112                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.index_date_unsta_angina+(365.25*2)) and a.eligeff 
le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_unsta_angina2;
MPRINT(HOSP):   set _07_hosp_unsta_angina2;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_UNSTA_ANGINA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina2 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
113                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospunsta_angina2two_years;
MPRINT(HOSP):   set _07_hosp3unsta_angina2;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA2TWO_YEARS may be incomplete.  When this step was stopped there were 0 
         observations and 5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_2sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
114                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.index_date_sta_angina+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_sta_angina2;
MPRINT(HOSP):   set _07_hosp_sta_angina2;
ERROR: File WORK._07_HOSP_STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STA_ANGINA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina2 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
115                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina2two_years;
MPRINT(HOSP):   set _07_hosp3sta_angina2;
ERROR: File WORK._07_HOSP3STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
116                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

derived._07_primary_2tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.index_date_tia+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia2;
MPRINT(HOSP):   set _07_hosp_tia2;
ERROR: File WORK._07_HOSP_TIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_TIA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia2 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
117                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosptia2two_years;
MPRINT(HOSP):   set _07_hosp3tia2;
ERROR: File WORK._07_HOSP3TIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
118                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

derived._07_primary_2other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.index_date_other+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_other2;
MPRINT(HOSP):   set _07_hosp_other2;
ERROR: File WORK._07_HOSP_OTHER2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OTHER2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other2 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
119                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospother2two_years;
MPRINT(HOSP):   set _07_hosp3other2;
ERROR: File WORK._07_HOSP3OTHER2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPOTHER2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
120                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   create table _07_hosp_revasc2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_2revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.index_date_revasc+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc2;
MPRINT(HOSP):   set _07_hosp_revasc2;
ERROR: File WORK._07_HOSP_REVASC2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_REVASC2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc2 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
121                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc2two_years;
MPRINT(HOSP):   set _07_hosp3revasc2;
ERROR: File WORK._07_HOSP3REVASC2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPREVASC2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
122                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_2cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.index_date_cvd+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd2;
MPRINT(HOSP):   set _07_hosp_cvd2;
ERROR: File WORK._07_HOSP_CVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_CVD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd2 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
123                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd2two_years;
MPRINT(HOSP):   set _07_hosp3cvd2;
ERROR: File WORK._07_HOSP3CVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
124                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_2anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.index_date_anginatia+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia2;
MPRINT(HOSP):   set _07_hosp_anginatia2;
ERROR: File WORK._07_HOSP_ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_ANGINATIA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia2 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
125                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia2two_years;
MPRINT(HOSP):   set _07_hosp3anginatia2;
ERROR: File WORK._07_HOSP3ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations 
         and 5 variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      
126                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_2noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.index_date_noncvd+(365.25*2)) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd2;
MPRINT(HOSP):   set _07_hosp_noncvd2;
ERROR: File WORK._07_HOSP_NONCVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_NONCVD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd2 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
127                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd2two_years;
MPRINT(HOSP):   set _07_hosp3noncvd2;
ERROR: File WORK._07_HOSP3NONCVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 2 then py=2;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD2TWO_YEARS may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPNONCVD2TWO_YEARS was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
128                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      

426        %hosp(a.eligend, 11, all);	
MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_1overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall1;
MPRINT(HOSP):   set _07_hosp_overall1;
ERROR: File WORK._07_HOSP_OVERALL1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OVERALL1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall1 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
129                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall1all;
MPRINT(HOSP):   set _07_hosp3overall1;
ERROR: File WORK._07_HOSP3OVERALL1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOVERALL1ALL was not replaced because this step was stopped.
130                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_1mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi1;
MPRINT(HOSP):   set _07_hosp_mi1;
ERROR: File WORK._07_HOSP_MI1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_MI1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi1 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
131                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospmi1all;
MPRINT(HOSP):   set _07_hosp3mi1;
ERROR: File WORK._07_HOSP3MI1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI1ALL was not replaced because this step was stopped.
132                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_1pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad1;
MPRINT(HOSP):   set _07_hosp_pad1;
ERROR: File WORK._07_HOSP_PAD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_PAD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad1 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
133                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosppad1all;
MPRINT(HOSP):   set _07_hosp3pad1;
ERROR: File WORK._07_HOSP3PAD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD1ALL was not replaced because this step was stopped.
134                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_1stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke1;
MPRINT(HOSP):   set _07_hosp_stroke1;
ERROR: File WORK._07_HOSP_STROKE1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STROKE1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke1 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
135                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospstroke1all;
MPRINT(HOSP):   set _07_hosp3stroke1;
ERROR: File WORK._07_HOSP3STROKE1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
136                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

WARNING: Data set DERIVED._07_HOSPSTROKE1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_1unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_unsta_angina1;
MPRINT(HOSP):   set _07_hosp_unsta_angina1;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_UNSTA_ANGINA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina1 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
137                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospunsta_angina1all;
MPRINT(HOSP):   set _07_hosp3unsta_angina1;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
138                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA1ALL may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_1sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_sta_angina1;
MPRINT(HOSP):   set _07_hosp_sta_angina1;
ERROR: File WORK._07_HOSP_STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STA_ANGINA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
139                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina1 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina1all;
MPRINT(HOSP):   set _07_hosp3sta_angina1;
ERROR: File WORK._07_HOSP3STA_ANGINA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;
140                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM


NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
derived._07_primary_1tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia1;
MPRINT(HOSP):   set _07_hosp_tia1;
ERROR: File WORK._07_HOSP_TIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_TIA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


141                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia1 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosptia1all;
MPRINT(HOSP):   set _07_hosp3tia1;
ERROR: File WORK._07_HOSP3TIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;
142                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM


NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
derived._07_primary_1other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_other1;
MPRINT(HOSP):   set _07_hosp_other1;
ERROR: File WORK._07_HOSP_OTHER1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OTHER1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

143                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other1 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospother1all;
MPRINT(HOSP):   set _07_hosp3other1;
ERROR: File WORK._07_HOSP3OTHER1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
144                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOTHER1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_revasc1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_1revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc1;
MPRINT(HOSP):   set _07_hosp_revasc1;
ERROR: File WORK._07_HOSP_REVASC1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_REVASC1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
145                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM



MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc1 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc1all;
MPRINT(HOSP):   set _07_hosp3revasc1;
ERROR: File WORK._07_HOSP3REVASC1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
146                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPREVASC1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_1cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd1;
MPRINT(HOSP):   set _07_hosp_cvd1;
ERROR: File WORK._07_HOSP_CVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_CVD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
147                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM



MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd1 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd1all;
MPRINT(HOSP):   set _07_hosp3cvd1;
ERROR: File WORK._07_HOSP3CVD1.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
148                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_1anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia1;
MPRINT(HOSP):   set _07_hosp_anginatia1;
ERROR: File WORK._07_HOSP_ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_ANGINATIA1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
149                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia1 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia1all;
MPRINT(HOSP):   set _07_hosp3anginatia1;
ERROR: File WORK._07_HOSP3ANGINATIA1.DATA does not exist.
MPRINT(HOSP):   * person-year;
150                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd1 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_1noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd1;
MPRINT(HOSP):   set _07_hosp_noncvd1;
ERROR: File WORK._07_HOSP_NONCVD1.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD1 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_NONCVD1 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
151                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd1 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd1 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd1all;
MPRINT(HOSP):   set _07_hosp3noncvd1;
ERROR: File WORK._07_HOSP3NONCVD1.DATA does not exist.
152                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD1ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPNONCVD1ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_overall2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_overall from 
derived._07_primary_2overall as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_overall lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_overall2;
MPRINT(HOSP):   set _07_hosp_overall2;
ERROR: File WORK._07_HOSP_OVERALL2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OVERALL2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OVERALL2 was not replaced because this step was stopped.
153                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3overall2 as select distinct patid , index_date_overall, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_overall2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospoverall2all;
154                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   set _07_hosp3overall2;
ERROR: File WORK._07_HOSP3OVERALL2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_overall+1),(lst_dt-index_date_overall+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOVERALL2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOVERALL2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_mi2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_mi from 
derived._07_primary_2mi as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_mi lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_mi2;
MPRINT(HOSP):   set _07_hosp_mi2;
ERROR: File WORK._07_HOSP_MI2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_MI2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
155                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

WARNING: Data set WORK._07_HOSP2_MI2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3mi2 as select distinct patid , index_date_mi, eligeff, eligend, max(lst_dt) as lst_dt format 
date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 then 
unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case when 
stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then pad 
else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_mi2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospmi2all;
156                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   set _07_hosp3mi2;
ERROR: File WORK._07_HOSP3MI2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_mi+1),(lst_dt-index_date_mi+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPMI2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPMI2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_pad2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_pad from 
derived._07_primary_2pad as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_pad lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_pad2;
MPRINT(HOSP):   set _07_hosp_pad2;
ERROR: File WORK._07_HOSP_PAD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_PAD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
157                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

WARNING: Data set WORK._07_HOSP2_PAD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3pad2 as select distinct patid , index_date_pad, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_pad2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosppad2all;
158                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   set _07_hosp3pad2;
ERROR: File WORK._07_HOSP3PAD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_pad+1),(lst_dt-index_date_pad+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPPAD2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPPAD2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_stroke2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_stroke from 
derived._07_primary_2stroke as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_stroke lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_stroke2;
MPRINT(HOSP):   set _07_hosp_stroke2;
ERROR: File WORK._07_HOSP_STROKE2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STROKE2 may be incomplete.  When this step was stopped there were 0 observations and 26 
159                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

         variables.
WARNING: Data set WORK._07_HOSP2_STROKE2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3stroke2 as select distinct patid , index_date_stroke, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_stroke2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


160                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   data derived._07_hospstroke2all;
MPRINT(HOSP):   set _07_hosp3stroke2;
ERROR: File WORK._07_HOSP3STROKE2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_stroke+1),(lst_dt-index_date_stroke+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTROKE2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPSTROKE2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_unsta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, 
a.index_date_unsta_angina from derived._07_primary_2unsta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) 
as mi , max(pad) as pad , max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as 
sta_angina , max(other) as other , max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , 
max(mg50) as mg50 , max(mg30_50) as mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , 
max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , 
max(mol65_105) as mol65_105 , max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , 
max(mol150) as mol150 , max(mol190) as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, 
fst_dt ) as b on a.patid=b.patid and a.index_date_unsta_angina lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_unsta_angina2;
MPRINT(HOSP):   set _07_hosp_unsta_angina2;
ERROR: File WORK._07_HOSP_UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
161                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

WARNING: The data set WORK._07_HOSP2_UNSTA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_UNSTA_ANGINA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3unsta_angina2 as select distinct patid , index_date_unsta_angina, eligeff, eligend, 
max(lst_dt) as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case 
when unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_unsta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
162                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM



MPRINT(HOSP):   data derived._07_hospunsta_angina2all;
MPRINT(HOSP):   set _07_hosp3unsta_angina2;
ERROR: File WORK._07_HOSP3UNSTA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_unsta_angina+1),(lst_dt-index_date_unsta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPUNSTA_ANGINA2ALL may be incomplete.  When this step was stopped there were 0 observations and 
         5 variables.
WARNING: Data set DERIVED._07_HOSPUNSTA_ANGINA2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_sta_angina2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_sta_angina 
from derived._07_primary_2sta_angina as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_sta_angina lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data _07_hosp2_sta_angina2;
MPRINT(HOSP):   set _07_hosp_sta_angina2;
ERROR: File WORK._07_HOSP_STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;
163                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM


NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_STA_ANGINA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_STA_ANGINA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3sta_angina2 as select distinct patid , index_date_sta_angina, eligeff, eligend, max(lst_dt) 
as lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_sta_angina2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
164                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hospsta_angina2all;
MPRINT(HOSP):   set _07_hosp3sta_angina2;
ERROR: File WORK._07_HOSP3STA_ANGINA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_sta_angina+1),(lst_dt-index_date_sta_angina+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPSTA_ANGINA2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPSTA_ANGINA2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_tia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_tia from 
derived._07_primary_2tia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_tia lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_tia2;
MPRINT(HOSP):   set _07_hosp_tia2;
ERROR: File WORK._07_HOSP_TIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
165                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_TIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_TIA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3tia2 as select distinct patid , index_date_tia, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_tia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
166                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hosptia2all;
MPRINT(HOSP):   set _07_hosp3tia2;
ERROR: File WORK._07_HOSP3TIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_tia+1),(lst_dt-index_date_tia+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPTIA2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPTIA2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_other2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_other from 
derived._07_primary_2other as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_other lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_other2;
MPRINT(HOSP):   set _07_hosp_other2;
ERROR: File WORK._07_HOSP_OTHER2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
167                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_OTHER2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_OTHER2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3other2 as select distinct patid , index_date_other, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_other2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
168                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospother2all;
MPRINT(HOSP):   set _07_hosp3other2;
ERROR: File WORK._07_HOSP3OTHER2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_other+1),(lst_dt-index_date_other+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPOTHER2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPOTHER2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_revasc2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_revasc from 
derived._07_primary_2revasc as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_revasc lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_revasc2;
MPRINT(HOSP):   set _07_hosp_revasc2;
ERROR: File WORK._07_HOSP_REVASC2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
169                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_REVASC2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_REVASC2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3revasc2 as select distinct patid , index_date_revasc, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_revasc2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
170                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data derived._07_hosprevasc2all;
MPRINT(HOSP):   set _07_hosp3revasc2;
ERROR: File WORK._07_HOSP3REVASC2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_revasc+1),(lst_dt-index_date_revasc+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPREVASC2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPREVASC2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_cvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_cvd from 
derived._07_primary_2cvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) as 
stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) as 
revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_cvd lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_cvd2;
MPRINT(HOSP):   set _07_hosp_cvd2;
ERROR: File WORK._07_HOSP_CVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
171                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_CVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set WORK._07_HOSP2_CVD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3cvd2 as select distinct patid , index_date_cvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_cvd2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
172                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospcvd2all;
MPRINT(HOSP):   set _07_hosp3cvd2;
ERROR: File WORK._07_HOSP3CVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_cvd+1),(lst_dt-index_date_cvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPCVD2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPCVD2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_anginatia2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_anginatia from 
derived._07_primary_2anginatia as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , 
max(stroke) as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , 
max(revasc) as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as 
mg30_50 , max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , 
max(mg120) as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , 
max(mol105_150) as mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) 
as mol190 , max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_anginatia lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_anginatia2;
MPRINT(HOSP):   set _07_hosp_anginatia2;
ERROR: File WORK._07_HOSP_ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
173                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_ANGINATIA2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_ANGINATIA2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3anginatia2 as select distinct patid , index_date_anginatia, eligeff, eligend, max(lst_dt) as 
lst_dt format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when 
unsta_angina > 0 then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as 
sta_angina , sum(case when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , 
sum(case when pad > 0 then pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , 
sum(case when hosp_mi > 0 then hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as 
hosp_stroke , sum(case when hosp_pad > 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina 
else 0 end) as hosp_angina , sum(case when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 
0 then hosp_other else 0 end) as hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 
then icu else 0 end) as icu , sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then 
hosp_mi_is_re else 0 end) as hosp_mi_is_re , sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then 
mg50 else 0 end) as mg50 , sum(case when mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 
else 0 end) as mg50_70 , sum(case when mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 
else 0 end) as mg90_120 , sum(case when mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as 
mg90 , sum(case when mg120 > 0 then mg120 else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case 
when mol65 > 0 then mol65 else 0 end) as mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when 
mol65_105 > 0 then mol65_105 else 0 end) as mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , 
sum(case when mol150_190 > 0 then mol150_190 else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) 
as mol190_255 , sum(case when mol150 > 0 then mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as 
mol190 , sum(case when mol255 > 0 then mol255 else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , 
sum(case when mi > 0 then los else 0 end) as mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , 
sum(case when sta_angina > 0 then los else 0 end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , 
sum(case when tia > 0 then los else 0 end) as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when 
hosp_ascvd > 0 then los else 0 end) as hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case 
when hosp_stroke > 0 then los else 0 end) as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , 
sum(case when hosp_angina > 0 then los else 0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as 
hosp_revasc_los , sum(case when hosp_other > 0 then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 
end) as reh_cvd_los , sum(case when icu > 0 then los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) 
as hosp_mi_is_re_los , sum(case when mg30 > 0 then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as 
mg50_los , sum(case when mg30_50 > 0 then los else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as 
mg50_70_los , sum(case when mg70_90 > 0 then los else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as 
mg90_120_los , sum(case when mg70 > 0 then los else 0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , 
sum(case when mg120 > 0 then los else 0 end) as mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case 
when mol65 > 0 then los else 0 end) as mol65_los , sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when 
mol65_105 > 0 then los else 0 end) as mol65_105_los , sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , 
sum(case when mol150_190 > 0 then los else 0 end) as mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as 
mol190_255_los , sum(case when mol150 > 0 then los else 0 end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as 
mol190_los , sum(case when mol255 > 0 then los else 0 end) as mol255_los , sum(case when mol320 > 0 then los else 0 end) as 
mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 
end) as reh_cvd_stay_los from _07_hosp2_anginatia2 group by patid;
NOTE: Statement not executed due to NOEXEC option.
174                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospanginatia2all;
MPRINT(HOSP):   set _07_hosp3anginatia2;
ERROR: File WORK._07_HOSP3ANGINATIA2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_anginatia+1),(lst_dt-index_date_anginatia+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPANGINATIA2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPANGINATIA2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp_noncvd2 as select distinct b.*, a.patid, a.eligeff, a.eligend, a.index_date_noncvd from 
derived._07_primary_2noncvd as a inner join (select distinct patid, fst_dt, lst_dt , max(mi) as mi , max(pad) as pad , max(stroke) 
as stroke , max(tia) as tia , max(unsta_angina) as unsta_angina , max(sta_angina) as sta_angina , max(other) as other , max(revasc) 
as revasc , max(icu_los) as icu_los , max(reh_los) as reh_los , max(mg30) as mg30 , max(mg50) as mg50 , max(mg30_50) as mg30_50 , 
max(mg50_70) as mg50_70 , max(mg70_90) as mg70_90 , max(mg90_120) as mg90_120 , max(mg70) as mg70 , max(mg90) as mg90 , max(mg120) 
as mg120 , max(mg150) as mg150 , max(mol65) as mol65 , max(mol105) as mol105 , max(mol65_105) as mol65_105 , max(mol105_150) as 
mol105_150 , max(mol150_190) as mol150_190 , max(mol190_255) as mol190_255 , max(mol150) as mol150 , max(mol190) as mol190 , 
max(mol255) as mol255 , max(mol320) as mol320 from _07_hosp_pre group by patid, fst_dt ) as b on a.patid=b.patid and 
a.index_date_noncvd lt b.fst_dt le (a.eligend) and a.eligeff le b.fst_dt le a.eligend;
NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   data _07_hosp2_noncvd2;
MPRINT(HOSP):   set _07_hosp_noncvd2;
ERROR: File WORK._07_HOSP_NONCVD2.DATA does not exist.
MPRINT(HOSP):   * length of stay;
MPRINT(HOSP):   los=lst_dt-fst_dt+1;
MPRINT(HOSP):   * diagnosis;
MPRINT(HOSP):   if mi=1 then hosp_mi=1;
MPRINT(HOSP):   if stroke=1 then hosp_stroke=1;
MPRINT(HOSP):   if pad=1 or acute_pao=1 or aotic=1 or inter_clau=1 or limb=1 then hosp_pad=1;
MPRINT(HOSP):   if unsta_angina=1 then hosp_angina=1;
MPRINT(HOSP):   if revasc=1 then hosp_revasc=1;
MPRINT(HOSP):   if sta_angina=1 or tia=1 then hosp_other=1;
175                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

MPRINT(HOSP):   * ICU and rehabilitation;
MPRINT(HOSP):   if reh_los ge 1 and (mi=1 or stroke=1 or hosp_pad=1) then reh_cvd=1;
MPRINT(HOSP):   if icu_los ge 1 then icu=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_pad=1 or hosp_angina=1 or hosp_revasc=1 or hosp_other=1 then hosp_ascvd=1;
MPRINT(HOSP):   if hosp_mi=1 or hosp_stroke=1 or hosp_revasc=1 then hosp_mi_is_re=1;
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set WORK._07_HOSP2_NONCVD2 may be incomplete.  When this step was stopped there were 0 observations and 26 
         variables.
WARNING: Data set WORK._07_HOSP2_NONCVD2 was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


MPRINT(HOSP):   proc sql;
NOTE: PROC SQL set option NOEXEC and will continue to check the syntax of statements.
MPRINT(HOSP):   create table _07_hosp3noncvd2 as select distinct patid , index_date_noncvd, eligeff, eligend, max(lst_dt) as lst_dt 
format date9. , count(distinct fst_dt) as n_hosp , sum(case when mi > 0 then mi else 0 end) as mi , sum(case when unsta_angina > 0 
then unsta_angina else 0 end) as unsta_angina , sum(case when sta_angina > 0 then sta_angina else 0 end) as sta_angina , sum(case 
when stroke > 0 then stroke else 0 end) as stroke , sum(case when tia > 0 then tia else 0 end) as tia , sum(case when pad > 0 then 
pad else 0 end) as pad , sum(case when hosp_ascvd > 0 then hosp_ascvd else 0 end) as hosp_ascvd , sum(case when hosp_mi > 0 then 
hosp_mi else 0 end) as hosp_mi , sum(case when hosp_stroke > 0 then hosp_stroke else 0 end) as hosp_stroke , sum(case when hosp_pad 
> 0 then hosp_pad else 0 end) as hosp_pad , sum(case when hosp_angina > 0 then hosp_angina else 0 end) as hosp_angina , sum(case 
when hosp_revasc > 0 then hosp_revasc else 0 end) as hosp_revasc , sum(case when hosp_other > 0 then hosp_other else 0 end) as 
hosp_other , sum(case when reh_cvd > 0 then reh_cvd else 0 end) as reh_cvd , sum(case when icu > 0 then icu else 0 end) as icu , 
sum(case when los > 0 then los else 0 end) as los , sum(case when hosp_mi_is_re > 0 then hosp_mi_is_re else 0 end) as hosp_mi_is_re 
, sum(case when mg30 > 0 then mg30 else 0 end) as mg30 , sum(case when mg50 > 0 then mg50 else 0 end) as mg50 , sum(case when 
mg30_50 > 0 then mg30_50 else 0 end) as mg30_50 , sum(case when mg50_70 > 0 then mg50_70 else 0 end) as mg50_70 , sum(case when 
mg70_90 > 0 then mg70_90 else 0 end) as mg70_90 , sum(case when mg90_120 > 0 then mg90_120 else 0 end) as mg90_120 , sum(case when 
mg70 > 0 then mg70 else 0 end) as mg70 , sum(case when mg90 > 0 then mg90 else 0 end) as mg90 , sum(case when mg120 > 0 then mg120 
else 0 end) as mg120 , sum(case when mg150 > 0 then mg150 else 0 end) as mg150 , sum(case when mol65 > 0 then mol65 else 0 end) as 
mol65 , sum(case when mol105 > 0 then mol105 else 0 end) as mol105 , sum(case when mol65_105 > 0 then mol65_105 else 0 end) as 
mol65_105 , sum(case when mol105_150 > 0 then mol105_150 else 0 end) as mol105_150 , sum(case when mol150_190 > 0 then mol150_190 
else 0 end) as mol150_190 , sum(case when mol190_255 > 0 then mol190_255 else 0 end) as mol190_255 , sum(case when mol150 > 0 then 
mol150 else 0 end) as mol150 , sum(case when mol190 > 0 then mol190 else 0 end) as mol190 , sum(case when mol255 > 0 then mol255 
else 0 end) as mol255 , sum(case when mol320 > 0 then mol320 else 0 end) as mol320 , sum(case when mi > 0 then los else 0 end) as 
mi_los , sum(case when unsta_angina > 0 then los else 0 end) as unsta_angina_los , sum(case when sta_angina > 0 then los else 0 
end) as sta_angina_los , sum(case when stroke > 0 then los else 0 end) as stroke_los , sum(case when tia > 0 then los else 0 end) 
as tia_los , sum(case when pad > 0 then los else 0 end) as pad_los , sum(case when hosp_ascvd > 0 then los else 0 end) as 
hosp_ascvd_los , sum(case when hosp_mi > 0 then los else 0 end) as hosp_mi_los , sum(case when hosp_stroke > 0 then los else 0 end) 
as hosp_stroke_los , sum(case when hosp_pad > 0 then los else 0 end) as hosp_pad_los , sum(case when hosp_angina > 0 then los else 
0 end) as hosp_angina_los , sum(case when hosp_revasc > 0 then los else 0 end) as hosp_revasc_los , sum(case when hosp_other > 0 
then los else 0 end) as hosp_other_los , sum(case when reh_cvd > 0 then los else 0 end) as reh_cvd_los , sum(case when icu > 0 then 
los else 0 end) as icu_los , sum(case when hosp_mi_is_re > 0 then los else 0 end) as hosp_mi_is_re_los , sum(case when mg30 > 0 
then los else 0 end) as mg30_los , sum(case when mg50 > 0 then los else 0 end) as mg50_los , sum(case when mg30_50 > 0 then los 
else 0 end) as mg30_50_los , sum(case when mg50_70 > 0 then los else 0 end) as mg50_70_los , sum(case when mg70_90 > 0 then los 
else 0 end) as mg70_90_los , sum(case when mg90_120 > 0 then los else 0 end) as mg90_120_los , sum(case when mg70 > 0 then los else 
0 end) as mg70_los , sum(case when mg90 > 0 then los else 0 end) as mg90_los , sum(case when mg120 > 0 then los else 0 end) as 
mg120_los , sum(case when mg150 > 0 then los else 0 end) as mg150_los , sum(case when mol65 > 0 then los else 0 end) as mol65_los , 
sum(case when mol105 > 0 then los else 0 end) as mol105_los , sum(case when mol65_105 > 0 then los else 0 end) as mol65_105_los , 
sum(case when mol105_150 > 0 then los else 0 end) as mol105_150_los , sum(case when mol150_190 > 0 then los else 0 end) as 
mol150_190_los , sum(case when mol190_255 > 0 then los else 0 end) as mol190_255_los , sum(case when mol150 > 0 then los else 0 
end) as mol150_los , sum(case when mol190 > 0 then los else 0 end) as mol190_los , sum(case when mol255 > 0 then los else 0 end) as 
mol255_los , sum(case when mol320 > 0 then los else 0 end) as mol320_los , sum(case when icu_los > 0 then icu_los else 0 end) as 
icu_stay_los , sum(case when reh_cvd > 0 then reh_los else 0 end) as reh_cvd_stay_los from _07_hosp2_noncvd2 group by patid;
176                                                        The SAS System                         Sunday, March 21, 2021 04:24:00 PM

NOTE: Statement not executed due to NOEXEC option.
MPRINT(HOSP):   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


MPRINT(HOSP):   data derived._07_hospnoncvd2all;
MPRINT(HOSP):   set _07_hosp3noncvd2;
ERROR: File WORK._07_HOSP3NONCVD2.DATA does not exist.
MPRINT(HOSP):   * person-year;
MPRINT(HOSP):   py=max((eligend-index_date_noncvd+1),(lst_dt-index_date_noncvd+1)) / 365.25;
MPRINT(HOSP):   if py ge 11 then py=11;
MPRINT(HOSP):   ln_py=log(py);
MPRINT(HOSP):   run;

NOTE: The SAS System stopped processing this step because of errors.
WARNING: The data set DERIVED._07_HOSPNONCVD2ALL may be incomplete.  When this step was stopped there were 0 observations and 5 
         variables.
WARNING: Data set DERIVED._07_HOSPNONCVD2ALL was not replaced because this step was stopped.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


ERROR: Errors printed on pages 8,13,14,21,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,82,83,84,85,
                               86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,
                               114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,
                               139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,158,160,162,164,166,168,170,172,174,
                               176.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           1:13.88
      cpu time            2.64 seconds
      
